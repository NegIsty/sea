%!PS-Adobe-2.0
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: rapport.dvi
%%CreationDate: Wed Dec 28 18:12:15 2016
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: NimbusSanL-Regu CMMI10 CMR7
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips rapport.dvi -f
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.12.28:1812
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A00DE74E4990135B9FCF930B9549CFAA482EEA3C612BF66FF5E4C2F6A0
304CC43B7F56F6DF973313CA7F2D88D302245F7E76FA135E6117720C4A8B1DA1
D96939FEC52F91FBD8A43CE01A409F0F69AC3680957CA87A11C698B9776B6AAC
AD3BD33DE9ECAC8C5F45C1543307B5F7DB4843FDA77BDD20AC8BFEA0C50552DC
B5A315EE27CFD8827E06B8BFCEDCB21F577C2F98765A250D47007DE10F612115
F1B7F5BD1FB5B5C7559C7223C22EB80C462D64503B8401A14DDD81FF191F0356
40EF885679B521B76117B2792AE1CCFDFFDA1ED8F34242D4167552D4AAFA137E
9F7AC12E0CBF6D5FA8903BFA43F47098276538E94290D04E744F97B9AFAA138F
6ED0F8A363A75940940BCC2559C9FB1A2B5A78470FF6714ED29F5AB1D3D809BB
F5433C3456594E0E763F09C4AFA698F87D8329A754C766642BDE082D84318EF8
C69E46AF9937B76AD069B7A94A2EBA1C3DAAA9B441F5418A96174CD8E512F168
38FB818435EA45F5D12E235B7DA19BF89D1010D80439FDE2068615A07BAFB584
AE787A4BF35F7E9FB22225301877C43DD1CCDCD59AE88C932FBC5A9A807647F5
499483B36D867C96AB8B2E4A79D4C7B3B18E45A508435AD4AC4B714A019FC268
1CC2FE6D244C74E04CD650334BEAD3870305C2E64D90F3AE6FB837E5B9D0373E
7583F005CA78115EE6BADFE86406C01200A41BA703B37E6651ADEFCFF686657B
C41FCD1267391E12D7309D4577369160CA47D16346DA18509508FAD6CC4BE741
2B1440363DDFCC96C929F555875CE8F81AD4AB1F6C1BF62C35848304E0BD2B64
E5DF16334B1EAAE1496E69E9EB591A0C3AAE949CC55519F96B1B3D8D4DEC2282
132B3F58CF223AE904DDDB29A23B7B34747864BD3DB598248913E75D41B3029C
853C71B35A28FFB385051B0C8AB745B189FC6CAABA249CD1248F911CBA38E9E3
3FDBABF9C626C99F724461C6EA55984565CCA8CB5233501520DD2D2A674B8354
7C8DC2BF2D633DD92D6C91D6EDDB968DA3C45563FA2D2B21240AC2D30AA7FDF2
9CE9CBE79211C8F91816FD3E182A4694BED8738648ABC6D6DCFDC873525DD6A8
0AC00CD1922C301EDD96786DE4E11D29949DB4C1EDC06358F3FF444250709EAD
2B2763D9AD0A65FD9EF0CEFDD4B7B6CF3B1B55231ECFE4E80966BBE5BCD683A8
487BF1E5B348AFE83AD34C61EEA243957B646F3CD1E8D55FF37F42DE93678E01
2B6E53A69085B0E63B945F6F548355CE7CE3E4D66FDA6BD49694B7A2A7614B3A
053654020BEA852CAF6897483550CDF2AEBA62BDE801C43668041DD42C81BDE1
D31D7D1D513D969F79DCF1E4F46B98DAC923BA35A30A3665A1DA536B8FD603EE
D230F6520C8B9197EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 28 /tau put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC894009AAE9A490E3B99E03E117A041A381B8DACFFF20F6E5F293B58B
0FAA86F132B8B59D102722B3E98E12F11EBC101AAE666271C93B6F7CF1AFE94B
5826703D754B09055EBE0A53E46EF9829C7181974A374E6AD658B17D89EB88D1
A80EF734BE6F686CCA917AA3AEF80A216B5E13C3626F2BE0093D2826CE4B3C25
90E3189335FC4F3BDAA0F15652CF8B32364DEE4C7FE174CA2219BF865BE7DB62
490D6C0BE2B1D2B889C0E1DAE9FC29B43AAA9C6A111C603B0ACF2AC6A7223A8A
3F13D96291D22B09F4D89777
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748073
CFFFB25D7C1188A40488A92FD2EA87A8A7DEEE9650149D167E131EBC361E6C92
2A9F532E6F7F85C21F704014374BDDEFB609E1EF72E87A7EA5AFDA938D6D0D86
F3813395B3523469EACBCE3AE0A271812228B8CF856DBF900704EB607E7A2698
08931B771ED1250E3866E88FC69A1214C724F830BDE997294721645F61FAB360
7C3B3F9EAA0BEA3074AD5A6EC578767BBE4F591737316A4F657DBDF2BDCB627D
C99B501F212C04DDCF148251E92337D102BDF46C4F598030F2E7121F6A610D64
0FC7E512A28BF6CA72CCEFB6270BE052F658087D5C67D702AEBF0B842B5B970C
C74AE8A08E28A3804934FFA3EF4A1695F578ED2A59D9EE46F33362634F975882
7B199FD078B14DAF0BFD6BD22B450926B69A090620505014FF932536CFEB7A1D
C6A7028A0ADDC43FA3076B2674E5A540B44DFFFCBF4181A86F0A4BD25C3921CD
2BA8360EFAB28614E343A4E9F8E511A3BE81417657DD2CD6783587B4DD60A9A3
E8FB1E85399BC5C251127B69C42697D8F40DE08234A7E36E96718669B1A78B7F
DC69C8BB5287F3D6EDAE7FAEE2F2A8043E9FE3DE20883AC911EB876DFB2E0C25
D8F805854E9147FE4001F1AD9BF7CB10080ABCF49DCAABA733F5985D8C87F648
4564372CC0E8DB1233ACF08D07C65F7177880587E359987313CF63EB9D3FFB26
35DD328BF8654E275440954271BCFA1AD9C73159AD6E68834E360B2E79C2752E
E1912426725A24ED006BDF5D6CE5AB4B33C724DB295EEB26F5E8DEE5B94BBF57
E976F21E87CF81405E816E296961D014627A537DFD9FCCE9470EDE21EF2BC98F
123E7D5EEEBBEF933766E3104B42792276E63BB928ED1CBBC6F5B9C32709F8FD
BDBD3EE782FA4FD49BE91395B290E712D52AFE53AECEC34E04717B87CAB6E46B
58686C8984A9BDD1DF3D9B95D34D66C279EE72E75EE44123FE1CD53846D377C4
B456779B914212E5CDCD937E40268DCB704A3B67740C9E3C2CC6E209ABE10DA3
B8F6F29D5766A482FDBFF248C0CC2C48F57E2E39E7AC729A06BC61C9997A1165
6C9EAED18B14F7C82465584E51EF9B79515FBEC893E422D4CDD23688F762757C
0FD23FFC5B86ECE49BEFE44719DC90D25B71C47A172339C61540B66090C3BC0E
BEC1EEFC57A8D71DC4B065208DD080EF2BE3CFDA357B67296B1BA24004B49936
7F9BFC51FA658C5D33EA1BAAE4AA60AAA99E4BA2EA2EB41D8C726413A1E42728
B458E05C389B2102D4F0F6063F518F4B3DAB019A4EEC3F455F8414F171FB64FE
95897FBEF48A1B122190FAD568373F9ED05AD04CC89027424F46C7B60B26E429
EEF27CB7BABD70314CE676E0681D2874A83C6197F9CD4976C1B5A53C281024E8
A6DA2B8F3FF6EA1FCA26D085B01DE0C280DDEAA649282074DFF0DE6585E5F1FD
7E876E744631E1089C770A0B56FFF2D9C43FF3E45F2EBF289E2457A3263C8905
B072F4CE5C89BEE7A792C6F1ED8796C43CDC7418ED1670BFDEFACAD0065F2693
9397F3A95D00F652B9610DD28D78E95C9C4375DA56CF82E97E8EBC912C08585E
1971325BF6F347400C9E57AD01C2DC6901C7A8626891881C4CB873FE3F09DFD6
5ED2B809288288F55B17581296567A79FBAC4AA439B97FD101F851FE199B9DA1
65EFF75330535CED6EB90E7C44F7E337B2010F8761FD84AE042C43D69E6A3026
7DBFE46592BB04903129D86C5EE37A1649CCC10C2DC42544ED16BF7A1E616392
A371A7209C437E858F3EBEDFEFFCBCCC73B2717B7753EFC26BA17D7909E4A963
7E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (rapport.dvi)
@start
%DVIPSBitmapFont: Fa ectt1000 10 38
/Fa 38 126 df<1F003F807FC0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FF
E0FFE0FFE0FFE0FFE07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07F
C01F0000000000000000000000000000001F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F
801F000B3470B32C>33 D<0000380000FC0001FC0003FC0007F8000FF0001FC0003F8000
7F0000FE0001FC0003F80003F00007F00007E0000FE0000FC0001F80001F80003F80003F
00003F00007F00007E00007E00007E0000FE0000FC0000FC0000FC0000FC0000FC0000FC
0000FC0000FC0000FC0000FC0000FC0000FC0000FE00007E00007E00007E00007F00003F
00003F00003F80001F80001F80000FC0000FE00007E00007F00003F00003F80001FC0000
FE00007F00003F80001FC0000FF00007F80003FC0001FC0000FC000038164272B92C>40
D<700000FC0000FE0000FF00007F80003FC0000FE00007F00003F80001FC0000FE00007F
00003F00003F80001F80001FC0000FC00007E00007E00007F00003F00003F00003F80001
F80001F80001F80001FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000
FC0000FC0000FC0000FC0001FC0001F80001F80001F80003F80003F00003F00007F00007
E00007E0000FC0001FC0001F80003F80003F00007F0000FE0001FC0003F80007F0000FE0
003FC0007F8000FF0000FE0000FC0000700000164279B92C>I<000380000007C0000007
C0000007C0000007C0000007C0000007C0002007C008F807C03EFE07C0FEFF07C1FEFFC7
C7FEFFE7CFFE3FFFFFF80FFFFFE003FFFF8001FFFF00007FFC00007FFC0001FFFF0003FF
FF800FFFFFE03FFFFFF8FFE7CFFEFFC7C7FEFF07C1FEFE07C0FEF807C03E2007C0080007
C0000007C0000007C0000007C0000007C0000007C000000380001F247AAA2C>I<0F801F
E03FF07FF87FF87FFC7FFC7FFC3FFC1FFC0FFC00FC00F800F801F803F007F01FE07FC0FF
80FF00FC0070000E17718A2C>44 D<7FFFFFF0FFFFFFF8FFFFFFF8FFFFFFF87FFFFFF01D
0579942C>I<00070000000F8000000F8000001F8000001F8000003F8000007F800000FF
800001FF800007FF80007FFF8000FFFF8000FFDF8000FF9F80007C1F8000001F8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F
8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F
8000001F8000001F8000001F80007FFFFFE0FFFFFFF0FFFFFFF0FFFFFFF07FFFFFE01C34
77B32C>49 D<0F801FC03FE07FF07FF07FF07FF07FF03FE01FC00F800000000000000000
00000000000000000000000000000000000000000F801FE03FF07FF87FF87FFC7FFC7FFC
3FFC1FFC0FFC00FC00F800F801F803F007F01FE07FC0FF80FF00FC0070000E3071A32C>
59 D<00000002000000000F800000001F800000007F80000000FF80000003FE0000000F
FC0000001FF00000007FE0000000FF80000003FE00000007FC0000001FF00000003FE000
0000FF80000003FF00000007FC0000001FF80000003FE0000000FF80000000FF00000000
FF00000000FF800000003FE00000001FF800000007FC00000003FF00000000FF80000000
3FE00000001FF000000007FC00000003FE00000000FF800000007FE00000001FF0000000
0FFC00000003FE00000000FF800000007F800000001F800000000F800000000200212A7B
AD2C>I<7FFFFFFFF0FFFFFFFFF8FFFFFFFFF8FFFFFFFFF87FFFFFFFF000000000000000
0000000000000000000000000000000000000000000000000000000000000000007FFFFF
FFF0FFFFFFFFF8FFFFFFFFF8FFFFFFFFF87FFFFFFFF025127DA12C>I<2000000000F800
000000FC00000000FF00000000FF800000003FE00000001FF800000007FC00000003FF00
000000FF800000003FE00000001FF000000007FC00000003FE00000000FF800000007FE0
0000001FF00000000FFC00000003FE00000000FF800000007F800000007F80000000FF80
000003FE0000000FFC0000001FF00000007FE0000000FF80000003FE00000007FC000000
1FF00000003FE0000000FF80000003FF00000007FC0000001FF80000003FE0000000FF80
000000FF00000000FC00000000F8000000002000000000212A7BAD2C>I<7FFFE00000FF
FFF00000FFFFF00000FFFFF000007FFFE0000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F00000F003F00001F803F00001F803F00001F803F00001F803F00001F803F00001F803F0
0001F803F00001F87FFFFFFFF8FFFFFFFFF8FFFFFFFFF8FFFFFFFFF87FFFFFFFF025337D
B22C>76 D<7FF0007FFCFFF800FFFEFFF800FFFEFFFC00FFFE7FFC007FFC07FE0007C007
DE0007C007DE0007C007DF0007C007CF0007C007CF0007C007CF8007C007C78007C007C7
C007C007C7C007C007C3C007C007C3E007C007C3E007C007C1E007C007C1F007C007C1F0
07C007C0F007C007C0F807C007C0F807C007C07C07C007C07C07C007C07C07C007C03E07
C007C03E07C007C01E07C007C01F07C007C01F07C007C00F07C007C00F87C007C00F87C0
07C00787C007C007C7C007C007C7C007C003C7C007C003E7C007C001E7C007C001E7C007
C001F7C007C000F7C007C000F7C007C000FFC07FFC007FC0FFFE007FC0FFFE003FC0FFFE
003FC07FFC001F8027337EB22C>78 D<7FFF803FFFC0FFFFC07FFFE0FFFFC07FFFE0FFFF
C07FFFE07FFF803FFFC003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F00001F80003F0
0001F80003F00001F80003F00001F80003F00001F80003F00001F80003F80003F80001F8
0003F00001F80003F00001FC0007F00000FC0007E00000FE000FE000007F001FC000003F
803F8000003FE0FF8000001FFFFF0000000FFFFE00000003FFF800000001FFF000000000
3F8000002B3480B22C>85 D<01FFF0000007FFFE00001FFFFF80001FFFFFE0003FFFFFF0
003FC01FF8003FC007F8003FC001FC001F8000FC00060000FE000000007E000000007E00
0000007E000000FFFE00001FFFFE0000FFFFFE0003FFFFFE000FFFFFFE001FFF807E003F
F8007E007FC0007E007F00007E00FE00007E00FC00007E00FC00007E00FC00007E00FC00
007E00FE00007E007F0000FE007F8003FE003FE01FFE001FFFFFFFFC0FFFFFFFFE07FFFF
BFFE01FFFE1FFE003FF007FC27247CA32C>97 D<0003FFE000001FFFF800007FFFFE0001
FFFFFE0003FFFFFF0007FE00FF000FF000FF001FE000FF001FC0007E003F800018003F00
0000007F000000007E000000007E00000000FC00000000FC00000000FC00000000FC0000
0000FC00000000FC00000000FC00000000FC000000007E000000007E000000007F000000
003F00000F003F80001F801FC0001F801FE0003F800FF0007F0007FE03FF0003FFFFFE00
01FFFFFC00007FFFF800001FFFE0000003FF000021247AA32C>99
D<00000FFE0000001FFF0000001FFF0000001FFF0000000FFF000000003F000000003F00
0000003F000000003F000000003F000000003F000000003F000000003F000000003F0000
00003F000007F83F00003FFE3F0000FFFFBF0001FFFFFF0003FFFFFF0007FC0FFF000FF0
03FF001FE001FF001FC000FF003F80007F003F00007F007E00003F007E00003F00FE0000
3F00FC00003F00FC00003F00FC00003F00FC00003F00FC00003F00FC00003F00FC00003F
00FC00003F00FE00003F007E00007F007E00007F007F0000FF003F8000FF003F8001FF00
1FC003FF000FF007FF0007FC1FFF0003FFFFFFFC01FFFFBFFE00FFFF3FFE003FFC3FFE00
0FF01FFC27337DB22C>I<0003FE0000001FFFC000007FFFF00001FFFFF80003FFFFFC00
07FE03FE000FF800FF001FE0003F801FC0003F803F80001FC03F00000FC07F00000FC07E
00000FE07E000007E0FC000007E0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFF
FFFFC0FC00000000FE000000007E000000007E000000007F000000003F000003C03F8000
07E01FC00007E00FF0000FE007F8003FC007FF00FFC001FFFFFF8000FFFFFF00003FFFFC
00000FFFF0000001FF800023247CA32C>I<00000FF80000003FFE000000FFFF000001FF
FF800003FFFF800007FC7F800007F07F80000FE03F00000FC03F00000FC00000000FC000
00000FC00000000FC00000000FC00000000FC000007FFFFFFE00FFFFFFFF00FFFFFFFF00
FFFFFFFF007FFFFFFE00000FC00000000FC00000000FC00000000FC00000000FC0000000
0FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000F
C00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC00000000FC0
0000000FC00000000FC00000000FC00000000FC00000000FC00000000FC000003FFFFFF0
007FFFFFF8007FFFFFF8007FFFFFF8003FFFFFF00021337DB22C>I<00000003F80007F8
0FFC001FFE3FFE007FFFFFFF01FFFFFFFF03FFFFFE7F03FC0FF87F07F003F83E0FE001FC
1C0FC000FC001FC000FE001F80007E001F80007E001F80007E001F80007E001F80007E00
1F80007E001FC000FE000FC000FC000FE001FC0007F003F80003FC0FF00007FFFFF00007
FFFFE0000FFFFF80000F9FFE00000F87F800000F800000000F800000000F800000000FC0
00000007E000000007FFFFF00003FFFFFE0007FFFFFF800FFFFFFFE01FFFFFFFF03FC000
1FF87F000003FC7E000000FC7C0000007CFC0000007EF80000003EF80000003EF8000000
3EF80000003EFC0000007E7E000000FC7F800003FC3FE0000FF81FFC007FF00FFFFFFFE0
03FFFFFF8001FFFFFF00003FFFF8000007FFC00028387EA42C>I<7FF000000000FFF800
000000FFF800000000FFF8000000007FF80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F81FE0000001F87FFC000001F9FFFE000001FBFFFF000001FFFF
FF000001FFF03F800001FFC01F800001FF801FC00001FF000FC00001FE000FC00001FC00
0FC00001FC000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F800
0FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F800
0FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F800
0FC00001F8000FC00001F8000FC0007FFFE0FFFF00FFFFF1FFFF80FFFFF1FFFF80FFFFF1
FFFF807FFFE0FFFF0029337FB22C>I<00070000001FC000001FC000003FE000003FE000
003FE000001FC000001FC000000700000000000000000000000000000000000000000000
00000000000000007FFFC0007FFFE000FFFFE0007FFFE0007FFFE0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E0000007E0000007E0000007E0000007E0007FFFFFFCFFFFFFFEFFFFFFFE
FFFFFFFE7FFFFFFC1F3479B32C>I<00000E0000003F8000003F8000007FC000007FC000
007FC000003F8000003F8000000E00000000000000000000000000000000000000000000
0000000000000001FFFF8003FFFFC003FFFFC003FFFFC001FFFFC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
001FC03C001F807E003F80FF003F00FF007F00FF01FE00FFFFFC007FFFF8007FFFF0001F
FFE00007FF00001A467CB32C>I<7FFFE00000FFFFF00000FFFFF00000FFFFF000007FFF
F000000003F000000003F000000003F000000003F000000003F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000007FFFFFFF80FFFFFF
FFC0FFFFFFFFC0FFFFFFFFC07FFFFFFF8022337BB22C>108 D<7F83F007E0007FCFFC1F
F800FFDFFE3FFC007FFFFEFFFC007FFFFFFFFE0007FE1FFC3E0007FC1FF83F0007F80FF0
1F0007F00FE01F0007E00FC01F0007E00FC01F0007E00FC01F0007C00F801F0007C00F80
1F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F80
1F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F80
1F0007C00F801F0007C00F801F0007C00F801F0007C00F801F0007C00F801F007FFC3FF8
7FF07FFC7FF8FFF0FFFE7FFCFFF87FFC7FF8FFF07FFC3FF87FF02D2481A32C>I<7FF01F
E00000FFF87FFC0000FFF9FFFE0000FFFBFFFF00007FFFFFFF000001FFF03F800001FFC0
1F800001FF801FC00001FF000FC00001FE000FC00001FC000FC00001FC000FC00001F800
0FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F800
0FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F800
0FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F800
0FC0007FFFE0FFFF00FFFFF1FFFF80FFFFF1FFFF80FFFFF1FFFF807FFFE0FFFF0029247F
A32C>I<0007FC0000001FFF0000007FFFC00001FFFFF00003FFFFF80007FC07FC000FF0
01FE001FE000FF001F80003F003F80003F803F00001F807E00000FC07E00000FC07E0000
0FC0FC000007E0FC000007E0FC000007E0FC000007E0FC000007E0FC000007E0FC000007
E0FE00000FE07E00000FC07E00000FC07F00001FC03F00001F803F80003F801FC0007F00
1FE000FF000FF001FE0007FC07FC0003FFFFF80001FFFFF000007FFFC000001FFF000000
07FC000023247CA32C>I<7FF01FE000FFF8FFF800FFFBFFFE00FFFFFFFF007FFFFFFF80
01FFF07FC001FF801FE001FF0007F001FE0003F801FC0003F801FC0001FC01F80000FC01
F80000FC01F80000FE01F800007E01F800007E01F800007E01F800007E01F800007E01F8
00007E01F800007E01F800007E01F80000FE01FC0000FC01FC0000FC01FC0001F801FE00
03F801FF0007F001FF000FF001FF801FE001FFE07FC001FFFFFF8001FFFFFF0001FBFFFE
0001F8FFF80001F83FC00001F800000001F800000001F800000001F800000001F8000000
01F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F80000007FFFE00000FFFFF00000FFFFF00000FFFFF000007FFFE0000027367FA32C>I<
0003FC078000001FFF0FC000007FFFCFC00001FFFFEFC00003FFFFFFC00007FE07FFC000
0FF001FFC0001FE000FFC0001FC0007FC0003F80003FC0003F00003FC0007F00001FC000
7E00001FC0007E00000FC000FC00000FC000FC00000FC000FC00000FC000FC00000FC000
FC00000FC000FC00000FC000FC00000FC000FC00000FC000FE00000FC0007E00001FC000
7E00001FC0003F00003FC0003F80003FC0001FC0007FC0001FE000FFC0000FF003FFC000
07FC0FFFC00003FFFFFFC00001FFFFEFC000007FFF8FC000003FFF0FC0000007F80FC000
0000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000
0000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC000
0000000FC000000003FFFF00000007FFFF80000007FFFF80000007FFFF80000003FFFF00
29367DA32C>I<7FFE003FC0FFFF01FFF0FFFF07FFF8FFFF1FFFFC7FFF3FFFFC003F7FE1
FC003FFF01FC003FFC00F8003FF80070003FF00000003FE00000003FE00000003FC00000
003F800000003F800000003F800000003F000000003F000000003F000000003F00000000
3F000000003F000000003F000000003F000000003F000000003F000000003F000000003F
000000003F000000003F000000003F0000007FFFFFE000FFFFFFF000FFFFFFF000FFFFFF
F0007FFFFFE00026247EA32C>I<007FF87003FFFFF80FFFFFF81FFFFFF83FFFFFF87FC0
0FF87E0003F8FC0001F8F80001F8F80001F8F80001F8FC0000F07F0000007FF000003FFF
C0001FFFFE000FFFFF8003FFFFE0007FFFF80001FFFC000007FC000000FE7800007FFC00
003FFC00001FFE00001FFE00001FFF00003FFF80003EFFC000FEFFF007FCFFFFFFFCFFFF
FFF8FFFFFFE0F8FFFF80701FFC0020247AA32C>I<001E000000003F000000003F000000
003F000000003F000000003F000000003F000000003F000000003F000000003F0000007F
FFFFFF00FFFFFFFF80FFFFFFFF80FFFFFFFF807FFFFFFF00003F000000003F000000003F
000000003F000000003F000000003F000000003F000000003F000000003F000000003F00
0000003F000000003F000000003F000000003F000000003F000000003F000000003F0000
00003F0003C0003F0007E0003F0007E0003F0007E0003F0007E0003F0007E0003F800FE0
001F801FC0001FE07FC0000FFFFF80000FFFFF000003FFFE000001FFF80000003FE00023
2E7EAD2C>I<7FF003FF8000FFF807FFC000FFF807FFC000FFF807FFC0007FF803FFC000
01F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC000
01F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC000
01F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC00001F8000FC000
01F8000FC00001F8000FC00001F8000FC00001F8001FC00001F8001FC00001F8003FC000
01FC007FC00000FE03FFC00000FFFFFFFF00007FFFFFFF80003FFFFFFF80001FFFCFFF80
0003FE07FF0029247FA32C>I<7FFF007FFF007FFF80FFFF00FFFF80FFFF807FFF80FFFF
007FFF007FFF0007C00001F00007C00001F00007C00001F00007C00001F00007C00001F0
0007C00001F00003E00003E00003E00003E00003E00003E00003E03E03E00003E07F03E0
0003E07F03E00001F07F07C00001F0FF87C00001F0FF87C00001F0F787C00001F0F787C0
0001F1F7C7C00000F1F7C7800000F9E3CF800000F9E3CF800000FBE3EF800000FBE3EF80
0000FBE3EF8000007BC1EF0000007FC1FF0000007FC1FF0000007F80FF0000007F80FF00
00003F80FE0000001F007C000029247FA32C>119 D<3FFF03FFF07FFF87FFF87FFF87FF
F87FFF87FFF83FFF03FFF000FC007E0000FC00FC00007E01F800003F01F000001F83F000
001F87E000000FCFC0000007EF80000003FF80000001FF00000001FE00000000FC000000
007C00000000FE00000001FE00000001FF00000003EF80000007CFC000000FC7C000000F
83E000001F01F000003F01F800007E00F800007C007C0000F8007E0001F8003F007FFF01
FFFC7FFF83FFFCFFFF83FFFE7FFF83FFFC7FFF01FFFC27247EA32C>I<7FFF01FFFCFFFF
81FFFEFFFF83FFFEFFFF81FFFE7FFF01FFFC03E0000F8001F0000F8001F0001F8001F800
1F0000F8001F0000F8003F0000FC003E00007C003E00007E007E00003E007C00003E007C
00003F00FC00001F00F800001F00F800000F81F800000F81F000000F81F0000007C1F000
0007C3E0000007C3E0000003E3E0000003E7C0000001E7C0000001F7C0000001F7800000
00FF80000000FF80000000FF000000007F000000007F000000003E000000003E00000000
7E000000007C000000007C00000000FC00000000F800000000F800000C01F800003F01F0
00007F83F000007F87E000007E0FE000007E1FC000007FFF8000003FFF0000001FFE0000
000FFC00000007E000000027367EA32C>I<000000FF00000007FF8000001FFF8000007F
FF800000FFFF000001FFC0000001FE00000003F800000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000007F00000001FE0000000FFE000007FFFC00000FFFF800000FFFE
000000FFFF8000007FFFC0000000FFE00000001FE000000007F000000003F000000003F0
00000003F000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F800000001FE00000001FFC0000000FFFF0000
007FFF8000001FFF80000007FF80000000FF0021417BB92C>123
D<7FC0000000FFF8000000FFFE000000FFFF8000007FFFC0000000FFE00000001FE00000
0007F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F800000001FE
00000001FFC0000000FFFF0000007FFF8000001FFF8000007FFF800000FFFF000001FFC0
000001FE00000003F800000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000007
F00000001FE0000000FFE000007FFFC00000FFFF800000FFFE000000FFF80000007FC000
000021417BB92C>125 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb ecit1000 10 15
/Fb 15 118 df<0000380000007C000000FC000000FC000000FC000001F8000001F80000
01F8000781F03C0FC1F07E0FE3F1FE1FF3F7FC0FFBEFFC07FFFFF003FFFFC001FFFF0000
7FFE00003FF800003FF80000FFFC0003FFFE000FFFFF803FFFFFC07FFFFFE0FF9F3FE0FF
1F1FE0FC3F0FC0F03F0780003E0000007E0000007E0000007E0000007E000000FC000000
FC0000007800001F2474AA2C>42 D<7FFFFEFFFFFEFFFFFFFFFFFE7FFFFE180572942C>
45 D<0000000001C00000000003E00000000007E00000000007E0000000000FC0000000
000F80000000001F80000000003F00000000003F00000000007E0000000000FC00000000
00FC0000000001F80000000003F00000000003F00000000007E00000000007C000000000
0FC0000000001F80000000001F80000000003F00000000007E00000000007E0000000000
FC0000000001F80000000001F80000000003F00000000003E00000000007E0000000000F
C0000000000FC0000000001F80000000003F00000000003F00000000007E00000000007C
0000000000FC0000000001F80000000001F80000000003F00000000007E00000000007E0
000000000FC0000000001F80000000001F80000000003F00000000003E00000000007E00
00000000FC0000000000FC0000000001F80000000003F00000000003F00000000007E000
0000000FC0000000000FC0000000001F80000000001F00000000003F00000000007E0000
0000007E0000000000FC0000000000F80000000000F800000000007000000000002B417A
B92C>47 D<000007F81C00001FFE3E00007FFFBE0000FFFFFE0001FFFFFE0003FC1FFE00
07F807FC000FE003FC000FC003FC001FC003FC001F8001F8003F0001F8003F0001F8003F
0003F8007F0003F0007E0001F0007E0001E0007E000000007E000000007F000000003F00
0000003FC00000003FF80000001FFF8000000FFFE0000007FFF0000003FFF80000007FFC
0000000FFE00000001FE000000007F000000007F000000003F000000003F000000003F00
0000003F000F00003F000F80007F001F80007E001F80007E001F80007E003F8000FC003F
8000FC003F8001FC003F8003F8007FC007F0007FE00FF0007FF83FE0007FFFFFC000FFFF
FF8000FDFFFE0000787FFC0000781FF00000273579B32C>83 D<00007F800003FFE0000F
FFF8003FFFFC007FFFFC00FFC1FE01FE00FE03FC01FE07F801FE0FF001FE0FE001FC1FC0
01FC3F8000703F0000003F0000007E0000007E0000007E000000FE000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FE0000007E00001C7F00003E3F80
00FE3FC00FFE1FFFFFFE0FFFFFFC07FFFFF001FFFFC0007FFE001F2475A32C>99
D<000003FF80000007FFC0000007FFC0000007FFC0000003FFC00000001FC00000001F80
0000001F800000003F800000003F800000003F000000003F000000007F000000007F0000
00007E000003F07E00000FFCFE00003FFFFE00007FFFFC0000FFFFFC0001FE1FFC0003FC
0FFC0007F80FF8000FF007F8000FE007F8001FC007F8001F8007F0003F8007F0003F0007
F0007F0007F0007E0007E0007E0007E0007E000FE000FE000FE000FC000FC000FC000FC0
00FC001FC180FC001FC7E0FC003F87E0FC003F87E0FC007F8FE0FC00FF8FC0FC01FF0FC0
FE03FF0FC07E07FF1F807F0FFF3F803FFFFFFF001FFFDFFF001FFF8FFE0007FE07FC0001
F801F000233376B22C>I<00007F000003FFC0000FFFF0003FFFF8007FFFFC00FFC1FC01
FE00FC03FC007E07F8007E0FE000FE0FE000FC1FC000FC3F8001FC3F0007F87F003FF87F
FFFFF07FFFFFE07FFFFF80FFFFFE00FFFFF000FC000000FC000000FC000000FC000000FC
000000FC0000007E0000007E00001C7F00003E3F8000FE3FC00FFE1FFFFFFE0FFFFFFC07
FFFFF001FFFFC0007FFE001F2475A32C>I<00000003FC000000001FFF000000003FFFC0
0000007FFFC00000007FFFE0000000FE1FE0000000FC1FE0000000FC1FE0000000FC1FE0
000001FC0FC0000001F80780000001F80000000001F80000000001F80000000001F80000
0003FFFFF8000003FFFFFC000007FFFFFC000003FFFFFC000003FFFFF800000007F00000
000007E00000000007E00000000007E00000000007E00000000007E0000000000FE00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000001FC00000
00001F80000000001F80000000001F80000000001F80000000001F80000000003F800000
00003F00000000003F00000000003F00000000003F00000000007F00000000007E000000
00007E00000000007E00000000007E00000000007E0000000000FE0000000000FC000000
0000FC0000000000FC0000000001FC0000000001F80000000001F80000000001F8000000
0003F80000001C03F00000007F03F00000007F07F0000000FF07E0000000FF0FE0000000
FF1FC0000000FFFF800000007FFF800000003FFF000000001FFC0000000007F000000000
2B457DB22C>I<07FF0000000FFF8000000FFF8000000FFF80000007FF800000003F8000
00003F000000003F000000007F000000007F000000007E000000007E00000000FE000000
00FE00000000FC00000000FC3FC00001FCFFF00001FFFFF80001FFFFFC0001FFFFFC0003
FFF0FE0003FFC07E0003FF007E0003FE007E0007FE007E0007FC007E0007F8007E0007F8
007E000FF000FE000FF000FC000FE000FC000FE000FC001FC001FC001FC001F8001FC001
F8001F8003F8003F8003F0303F8003F0FC3F0007F0FC3F0007E0FC7F0007E1FC7F000FE1
F87E000FC1F87E000FC3F0FE000FC7F0FE000FCFE0FC000FFFE0FC0007FFC0FC0007FF80
F80003FE00700000FC00263379B22C>104 D<00000001E000000003F000000007F80000
0007F800000007F800000007F800000003F000000001E000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001FE00000007FF8
000001FFFC000003FFFE000007FFFE00000FF87F00001FE03F00003FC03F00007F803F00
007F007F0000FE007F0000FC007E0000FC007E0000FC00FE00000000FE00000000FC0000
0000FC00000001FC00000001FC00000001F800000001F800000003F800000003F8000000
03F000000003F000000007F000000007F000000007E000000007E00000000FE00000000F
E00000000FC00000000FC00000001FC00000001FC00000001F800000001F800000003F80
0000003F800000003F000000003F000000007F000000007E00000000FE00003C01FC0000
7E01FC0000FF03F80000FF0FF00000FF3FE00000FFFFC00000FFFF8000007FFF0000003F
FC0000000FE0000000254678B32C>106 D<7FFF00FFFF80FFFF80FFFF807FFF80003F80
003F00003F00007F00007F00007E00007E0000FE0000FE0000FC0000FC0001FC0001FC00
01F80001F80003F80003F80003F00003F00007F00007F00007E00007E0000FE0000FE000
0FC0000FC0001FC0001FC0001F80001F80003F80183F807E3F007E3F007E7F00FE7F00FC
7E00FC7E01F87E03F87F87F03FFFF01FFFE00FFFC007FF0001FE00173370B22C>108
D<01F800FF8007FE03FFE00FFF0FFFF81FFF9FFFFC1FFFFFFFFE3F9FFF81FE3F0FFE007E
7E0FFC007F7E0FF800FF7E1FF001FFFC1FF001FFFC1FE000FEFC1FE000FCFC3FC0007800
3FC00000003F800000003F800000007F000000007F000000007F000000007E00000000FE
00000000FE00000000FC00000000FC00000001FC00000001FC00000001F800000001F800
000003F800000003F800000003F000000003F000000003F000000003E000000001C00000
00282479A32C>114 D<0000FFE0000007FFFC00001FFFFE00003FFFFF00007FFFFF8000
FF807F8000FC007F8001F8007F8001F0007F8001F0007F8003F0003F0003F0001C0001F8
00000001FE00000001FFF8000000FFFF0000007FFFC000001FFFF0000007FFF80000003F
FC00000001FC000000007E000000007E001C00003E007F00003E007F00007E00FF00007C
00FF0000FC00FF0001FC00FE0003F800FF803FF0007FFFFFE0003FFFFFC0001FFFFF8000
07FFFE000000FFE00000212478A32C>I<0001E0000003F0000003F0000003F0000007F0
000007F0000007E0000007E000000FE000000FE000000FC000000FC000001FC000001FC0
00001F80007FFFFF807FFFFFC0FFFFFFC07FFFFFC07FFFFF80007F0000007F0000007E00
00007E000000FE000000FE000000FC000000FC000001FC000001FC000001F8000001F800
0003F8000003F8000003F0000003F0000007F000C007F003F007E003F007E003F00FE007
F00FE00FE00FC01FE00FC03FC00FC07F800FE1FF0007FFFE0007FFFC0003FFF80001FFE0
00007F00001C3374B22C>I<00F80001C003FE0003E007FF0007E00FFF0007E01FFF8007
E03F9F800FE03F1F800FE07F1F800FC07E1F800FC07E3F801FC0FE3F001FC0FC3F001F80
FC7F001F80FC7E003F80007E003F8000FE003F0000FC003F0000FC007F0001FC007F0001
F8007E0001F8007E0001F800FE1803F800FE7E03F001FC7E03F001FC7E03F003FC7E03F0
03FCFE03F007F8FC03F00FF8FC03F81FF9FC01FC3FF9F801FFFFFFF800FFFFFFF0007FFE
7FE0003FF83FC0000FE00F8027247AA32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc ecrm1000 10 26
/Fc 26 120 df<0003F80000001FFF0000007E0FC00000F803E00001E000F00003C00078
0007C0007C000F80003E000F80003E001F00001F001F00001F003F00001F803F00001F80
3F00001F807E00000FC07E00000FC07E00000FC07E00000FC07E00000FC0FE00000FE0FE
00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00
000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE0000
0FE0FE00000FE0FE00000FE0FE00000FE07E00000FC07E00000FC07E00000FC07E00000F
C07F00001FC03F00001F803F00001F803F00001F801F00001F001F00001F000F80003E00
0F80003E0007C0007C0003E000F80003F001F80000F803E000007E0FC000001FFF000000
03F8000023397DB62A>48 D<0001C0000003C0000007C000001FC00000FFC000FFFFC000
FFFFC000FF1FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
003FE0007FFFFFF07FFFFFF07FFFFFF01C3779B62A>I<000FF00000007FFE000001FFFF
800003E03FE0000F000FF0001E0007F8001C0003FC00380001FE00700001FE00700000FF
00600000FF00FE0000FF00FF00007F80FF80007F80FF80007F80FF80007F80FF80007F80
FF80007F807F00007F801C00007F800000007F80000000FF00000000FF00000000FE0000
0001FE00000001FC00000003FC00000003F800000007F00000000FE00000000FC0000000
1F800000003F000000007E00000000FC00000001F800000001E000000003C00000000780
0000000F000000001E000180003C000180007800018000F000038001E000030003C00003
00078000030007000007000FFFFFFF001FFFFFFF003FFFFFFF007FFFFFFE00FFFFFFFE00
FFFFFFFE00FFFFFFFE0021377CB62A>I<0007F80000003FFF000000FFFFC00001F80FF0
0003C007F800078003FC000E0001FE000F8001FE001FE000FF001FF000FF001FF000FF00
1FF000FF001FF000FF001FF000FF000FE000FF0007C000FF00000001FE00000001FE0000
0001FC00000003FC00000003F800000007F000000007E00000000F800000007F0000001F
FC0000001FFF800000000FE000000007F000000001FC00000001FE00000000FF00000000
7F800000007F800000007FC00000007FC00000003FC00000003FE00000003FE01E00003F
E07F80003FE07F80003FE0FFC0003FE0FFC0003FE0FFC0003FE0FFC0003FC0FFC0007FC0
FF80007F807E00007F80700000FF00380001FE001E0001FE000F8003F80007F00FF00001
FFFFC000007FFF0000000FF8000023397DB62A>I<000000380000000038000000007800
000000F800000000F800000001F800000003F800000007F800000007F80000000FF80000
001FF80000001BF800000033F800000073F800000063F8000000C3F8000001C3F8000001
83F800000303F800000703F800000603F800000C03F800001C03F800001803F800003003
F800007003F800006003F80000C003F80001C003F800038003F800030003F800070003F8
000E0003F8000C0003F800180003F800380003F800300003F800600003F800E00003F800
FFFFFFFFF8FFFFFFFFF8FFFFFFFFF8000003F800000003F800000003F800000003F80000
0003F800000003F800000003F800000003F800000003F800000003F800000007FC000003
FFFFF80003FFFFF80003FFFFF825387EB72A>I<0600000C000780003C0007F003F80007
FFFFF80007FFFFF00007FFFFE00007FFFF800007FFFF000007FFFC0000067FE000000600
000000060000000006000000000600000000060000000006000000000600000000060000
0000060000000006000000000607F80000061FFE000006780F800006E007E00007C003F0
00078001F800070001F800060000FC00060000FE00000000FE00000000FF000000007F00
0000007F000000007F800000007F800000007F800000007F801C00007F807F00007F80FF
00007F80FF80007F80FF80007F80FF80007F80FF00007F00FF0000FF00FC0000FF006000
00FE00700000FE00700001FC00380001F8001C0003F8001E0007F0000F800FE00007E03F
800001FFFF0000007FFC0000001FE0000021397CB62A>I<00003FC0000001FFF0000007
FFFC00000FE03E00003F800700007E001F0000FC003F8001F8007F8003F0007F8007F000
7F8007E0007F800FE0003F000FC0001E001FC00000001F800000003F800000003F800000
003F800000007F800000007F000000007F01FC00007F07FF8000FF1E07E000FF3801F000
FF7000F800FF6000FC00FFE0007E00FFC0003F00FFC0003F80FF80003F80FF80001FC0FF
80001FC0FF80001FC0FF00001FE0FF00001FE0FF00001FE0FF00001FE0FF00001FE07F00
001FE07F00001FE07F00001FE07F00001FE07F80001FE03F80001FE03F80001FC03F8000
1FC01F80003F801FC0003F800FC0003F000FE0007F0007E000FE0003F000FC0001F801F8
0000FE07F000007FFFC000001FFF00000003FC000023397DB62A>I<3000000000380000
00003E000000003FFFFFFFE03FFFFFFFE03FFFFFFFE03FFFFFFFC07FFFFFFFC07FFFFFFF
807FFFFFFF0070000006006000000E006000001C006000003800E000003000C000007000
C00000E000C00000C000000001C00000000380000000070000000006000000000E000000
001C000000001C00000000380000000078000000007000000000F000000000E000000001
E000000001E000000003E000000003C000000007C000000007C00000000FC00000000FC0
0000000FC00000001FC00000001F800000001F800000003F800000003F800000003F8000
00003F800000003F800000007F800000007F800000007F800000007F800000007F800000
007F800000007F800000007F800000007F800000003F000000001E000000233A7BB72A>
I<0003F80000001FFF0000007FFFC00000FC07F00001E001F80003C0007C000780003C00
0700003E000F00001E000E00001F001E00000F001E00000F001E00000F001F00000F001F
00000F001F80001F001FC0001E001FE0001E000FF8003C000FFC007C000FFF00780007FF
80F00003FFE3E00003FFF7800000FFFF0000007FFE0000003FFF8000000FFFE000003FFF
F00000F9FFF80001E07FFE0003C03FFF000F800FFF001F0007FF801E0001FFC03C0000FF
C07C00003FC07800001FE07800000FE0F8000007E0F0000003E0F0000003E0F0000001E0
F0000001E0F0000001E0F8000001C0F8000001C078000003C07C000003803E000007801F
00000F000F80001E0007E0007C0003F803F00000FFFFE000003FFF80000007FC00002339
7DB62A>I<0003F80000001FFF0000007FFFC00001FC07E00003F803F00007E001F8000F
E000FC001FC0007E001F80007E003F80003F003F80003F007F00003F807F00003F80FF00
003F80FF00001FC0FF00001FC0FF00001FC0FF00001FC0FF00001FC0FF00001FE0FF0000
1FE0FF00001FE0FF00001FE0FF00001FE07F00003FE07F00003FE07F00003FE03F80003F
E03F80007FE01F80007FE00FC000FFE007E000DFE003E001DFE001F0039FE000FC0F1FE0
003FFC1FC00007F01FC00000001FC00000001FC00000003FC00000003F800000003F8000
00003F000000007F000F00007F001F80007E003FC000FC003FC000FC003FC001F8003FC0
03F0003F8007E0001F000FE0001C001F80000F807F000007FFFE000001FFF80000003FC0
000023397DB62A>I<7FFFFFFFFFFFF8FFFFFFFFFFFFFC00000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFC7FFF
FFFFFFFFF836147B9E41>61 D<3FFFFFFFFFFFE03FFFFFFFFFFFE03FFFFFFFFFFFE03FC0
03FF001FE03E0001FE0003E07C0001FE0001F0780001FE0000F0700001FE000070700001
FE000070700001FE000070600001FE000030600001FE000030600001FE000030600001FE
000030E00001FE000038C00001FE000018C00001FE000018C00001FE000018C00001FE00
0018000001FE000000000001FE000000000001FE000000000001FE000000000001FE0000
00000001FE000000000001FE000000000001FE000000000001FE000000000001FE000000
000001FE000000000001FE000000000001FE000000000001FE000000000001FE00000000
0001FE000000000001FE000000000001FE000000000001FE000000000001FE0000000000
01FE000000000001FE000000000001FE000000000001FE000000000001FE000000000001
FE000000000001FE000000000001FE000000000001FE000000000001FE000000000001FE
000000000001FE000000000001FE000000000001FE000000000007FF800000001FFFFFFF
E000001FFFFFFFE000001FFFFFFFE00035397DB83C>84 D<001FE0000000FFFC000003E0
3F000007000F80000F8007E0001FC003F0001FE003F0001FE001F8001FE001F8001FE000
FC000FC000FC00078000FC00000000FC00000000FC00000000FC00000000FC0000007FFC
000007FFFC00003FE0FC0000FE00FC0003F800FC000FF000FC001FC000FC003FC000FC00
7F8000FC007F0000FC007F0000FC0CFE0000FC0CFE0000FC0CFE0000FC0CFE0001FC0CFE
0001FC0CFF0003FC0C7F00077C0C7F80063E183FC01E3E180FE0781FF003FFF00FE0007F
8007C026277DA52A>97 D<0003FC00001FFF80007E03E001F8007003F000F807E001FC0F
C003FC0FC003FC1F8003FC3F8003FC3F0001F87F0000F07F0000007F0000007E000000FE
000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE
0000007E0000007F0000007F0000003F0000063F8000061F80000E1FC0000C0FC0001C07
E0003803F0007001F800E0007C07C0001FFF000007F8001F277DA525>99
D<0007F800001FFF00007C0FC001F803E003F001F007E001F80FC000F81F80007C1F8000
7C3F00007E3F00003E7F00003E7F00003F7E00003FFE00003FFE00003FFE00003FFFFFFF
FFFFFFFFFFFE000000FE000000FE000000FE000000FE0000007E0000007E0000007F0000
007F0000003F0000033F8000031F8000070FC0000607C0000E07E0001C01F0003800F800
70007E03E0001FFF800003FC0020277EA525>101 D<00000003F0000FF00FF8003FFC3C
3C00F81F707C01F00FE07C03E007C07C07C003E0100FC003F0000FC003F0001F8001F800
1F8001F8001F8001F8001F8001F8001F8001F8001F8001F8001F8001F8001F8001F8000F
C003F0000FC003F00007C003E00003E007C00003F00F800003F81F0000073FFC0000060F
F000000E000000000E000000000E000000000E000000000F000000000F000000000FC000
000007FFFFC00007FFFFF80003FFFFFE0001FFFFFF8003FFFFFFC00F80007FE01F00000F
F03E000003F07C000001F07C000001F8F8000000F8F8000000F8F8000000F8F8000000F8
F8000000F8FC000001F87C000001F03E000003E03F000007E00F80000F8007E0003F0001
FC01FC00007FFFF0000007FF000026387EA52A>103 D<0380000FE0001FF0001FF0001F
F0001FF0001FF0000FE00003800000000000000000000000000000000000000000000000
000000000000000003F000FFF000FFF000FFF00007F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00007
F800FFFFC0FFFFC0FFFFC012387EB717>105 D<03F000FFF000FFF000FFF0000FF00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00007F800FFFFC0FFFFC0FFFFC0123A7EB917>108 D<03F00FF0001FE000FFF03FFC00
7FF800FFF0F03F01E07E00FFF1C01F83803F000FF3800FC7001F8003F7000FCE001F8003
FE000FDC001F8003FC0007F8000FC003FC0007F8000FC003F80007F0000FC003F80007F0
000FC003F80007F0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003
F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0
000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003
F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0
000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC007
F8000FF0001FE0FFFFC1FFFF83FFFFFFFFC1FFFF83FFFFFFFFC1FFFF83FFFF40257EA445
>I<03F00FF00000FFF03FFC0000FFF0F03F0000FFF1C01F80000FF3800FC00003F7000F
C00003FE000FC00003FC0007E00003FC0007E00003F80007E00003F80007E00003F80007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007E00003F00007
E00003F00007E00003F00007E00003F00007E00007F8000FF000FFFFC1FFFF80FFFFC1FF
FF80FFFFC1FFFF8029257EA42E>I<0003FE0000000FFF8000003E03E00000F800F80001
F0007C0003E0003E0007C0001F000F80000F801F80000FC01F000007C03F000007E03F00
0007E07E000003F07E000003F07E000003F07E000003F0FE000003F8FE000003F8FE0000
03F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F8FE000003F87E000003
F07E000003F07F000007F03F000007E03F000007E01F80000FC00F80000F800FC0001F80
07E0003F0003F0007E0000F800F800007E03F000001FFFC0000003FE000025277EA52A>
I<03F01FE000FFF07FF800FFF1E07E00FFF3801F8007F7000FC003FE0007E003FC0003F0
03F80003F803F00001F803F00001FC03F00000FC03F00000FE03F00000FE03F00000FE03
F000007F03F000007F03F000007F03F000007F03F000007F03F000007F03F000007F03F0
00007F03F000007F03F000007F03F00000FE03F00000FE03F00000FE03F00001FC03F000
01FC03F80003F803F80003F003FC0007F003FE000FE003F6000FC003F7803F0003F1E07E
0003F0FFF80003F01FC00003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000007F8000000FF
FFC00000FFFFC00000FFFFC0000028357EA42E>I<07E01F00FFE07FC0FFE1E3E0FFE387
F00FE707F003E607F003EE07F003EC03E003FC008003F8000003F8000003F8000003F800
0003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F000
0003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F0000003F000
0003F0000003F0000007F80000FFFFF000FFFFF000FFFFF0001C257EA421>114
D<00FF030003FFE7000F80FF001E003F003C001F0078000F0070000700F0000700F00007
00F0000300F8000300F8000300FC000300FF0000007FE000007FFF00003FFFE0001FFFF8
000FFFFC0003FFFE0000FFFF000007FF8000007F8000001F80C0000FC0C00007C0C00007
C0E00003C0E00003C0E00003C0F00003C0F0000380F8000780FC000780FC000F00FF001E
00F3C07C00E1FFF000C03F80001A277DA521>I<00180000001800000018000000180000
0018000000380000003800000038000000780000007800000078000000F8000001F80000
03F8000007F800001FFFFF00FFFFFF00FFFFFF0001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F800C001F800C001F800C001F800C0
01F800C001F800C001F800C001F800C001F800C000FC01C000FC0180007C0380007E0300
003F0700000FFE000001F8001A347FB220>I<FFFF1FFFE03FFEFFFF1FFFE03FFEFFFF1F
FFE03FFE0FF800FF000FF807F0007E0003E007F0007E0003C003F0003E00018003F0003E
00018001F8003F00030001F8003F00030001F8003F00030000FC003F80060000FC006F80
060000FC006F800600007E00EFC00C00007E00C7C00C00007E00C7C01C00003F01C7E018
00003F0183E01800003F8183F03800001F8383F03000001F8301F03000001FC301F87000
000FC600F86000000FC600F860000007E600FCC0000007EC007CC0000007EC007CC00000
03FC007F80000003F8003F80000003F8003F80000001F8003F00000001F0001F00000001
F0001F00000000F0001E00000000E0000E0000000060000C000037257EA33C>119
D E
%EndDVIPSBitmapFont
/Fd 202[33 33 33 33 33 49[{}5 58.1154 /CMR7 rf /Fe 227[36
28[{}1 83.022 /CMMI10 rf /Ff 199[46 1[46 1[46 1[46 46
46 48[{ TeXBase1Encoding ReEncodeFont }6 83.022 /NimbusSanL-Regu
rf
%DVIPSBitmapFont: Fg ecbx1440 14.4 10
/Fg 10 85 df<0000001E00000000003E0000000000FE0000000003FE000000000FFE00
0000007FFE00000007FFFE000003FFFFFE0000FFFFFFFE0000FFFFFFFE0000FFFFFFFE00
00FFF87FFE0000FC007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE00
0000007FFE000000007FFE00007FFFFFFFFFFC7FFFFFFFFFFC7FFFFFFFFFFC7FFFFFFFFF
FC7FFFFFFFFFFC2E4E76CD42>49 D<00001FFE0000000001FFFFF00000000FFFFFFC0000
003FFFFFFF8000007FFFFFFFE00001FF803FFFF00003FC0007FFFC0007F00001FFFE000F
E00000FFFF001F8000007FFF803F0000003FFF803F0000001FFFC07FE000001FFFE07FF8
00000FFFE07FFC00000FFFF0FFFC000007FFF0FFFE000007FFF0FFFE000003FFF8FFFE00
0003FFF8FFFE000003FFF8FFFE000003FFF8FFFE000003FFF87FFC000003FFF87FFC0000
03FFF83FF8000003FFF81FF0000003FFF80380000003FFF80000000003FFF00000000007
FFF00000000007FFF00000000007FFE0000000000FFFE0000000000FFFC0000000001FFF
C0000000001FFF80000000003FFF00000000003FFE00000000007FFC0000000000FFF800
00000000FFF00000000001FFE00000000003FFC00000000007FF800000000007FF000000
00000FFC00000000001FF800000000003FF000000000007FC00000000000FF8000000000
01FF000000000003FC000000000007F800000000000FF00000F800001FE00000F800003F
C00000F800007F000000F80000FE000001F00001FC000001F00003F8000001F00007F000
0001F00007E0000001F0000F80000003F0001F00000003F0003E00000007F0007FFFFFFF
FFF000FFFFFFFFFFE001FFFFFFFFFFE003FFFFFFFFFFE007FFFFFFFFFFE00FFFFFFFFFFF
E01FFFFFFFFFFFE03FFFFFFFFFFFE07FFFFFFFFFFFE0FFFFFFFFFFFFE0FFFFFFFFFFFFC0
FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFFC0354E7ACD42>I<000007FFC0000000
007FFFFC00000003FFFFFF8000000FFFFFFFE000001FF803FFF800007FC000FFFC0000FE
00003FFE0001FC00003FFF0003F800001FFF8003FE00001FFF8007FF80000FFFC007FFC0
000FFFC00FFFC0000FFFE00FFFE0000FFFE00FFFE0000FFFE00FFFE0000FFFE00FFFE000
0FFFE00FFFE0000FFFE00FFFE0000FFFE007FFC0000FFFE007FFC0000FFFC003FF80000F
FFC001FF00001FFFC0003800001FFF80000000001FFF80000000003FFF00000000003FFF
00000000007FFE00000000007FFC0000000000FFF80000000001FFF00000000003FFC000
0000000FFF80000000007FFE000000007FFFF8000000007FFFC0000000007FFFFC000000
007FFFFF800000000003FFE000000000007FF800000000003FFE00000000001FFF000000
00000FFF80000000000FFFC00000000007FFE00000000007FFF00000000003FFF8000000
0003FFF80000000003FFFC0000000001FFFC0000000001FFFC0000000001FFFE00000000
01FFFE0000000001FFFE03C0000001FFFE0FF0000001FFFE3FFC000001FFFE7FFE000001
FFFE7FFE000001FFFEFFFF000001FFFEFFFF000001FFFEFFFF000001FFFCFFFF000001FF
FCFFFF000003FFFCFFFF000003FFF8FFFF000003FFF87FFE000003FFF07FFC000007FFF0
7FF8000007FFE03FE000000FFFC01FC000001FFFC00FF000003FFF8007FE00007FFE0003
FFE003FFFC0001FFFFFFFFF800007FFFFFFFE000000FFFFFFF00000001FFFFFC00000000
1FFF800000374F7BCD42>I<0000000000FC00000000000001FC00000000000001FC0000
0000000003FC00000000000007FC0000000000000FFC0000000000000FFC000000000000
1FFC0000000000003FFC0000000000007FFC0000000000007FFC000000000000FFFC0000
00000001FFFC000000000003FFFC000000000003FFFC000000000007FFFC00000000000F
FFFC00000000001FFFFC00000000001F7FFC00000000003E7FFC00000000007E7FFC0000
000000FC7FFC0000000000F87FFC0000000001F07FFC0000000003F07FFC0000000007E0
7FFC0000000007C07FFC000000000F807FFC000000001F807FFC000000003F007FFC0000
00003E007FFC000000007C007FFC00000000FC007FFC00000001F8007FFC00000001F000
7FFC00000003E0007FFC00000007E0007FFC0000000FC0007FFC0000000F80007FFC0000
001F00007FFC0000003F00007FFC0000007E00007FFC0000007C00007FFC000000F80000
7FFC000001F800007FFC000003F000007FFC000003E000007FFC000007C000007FFC0000
0FC000007FFC00001F8000007FFC00001F0000007FFC00003E0000007FFC00007E000000
7FFC0000FC0000007FFC0000FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80
FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8000000000FFFC000000000000FFFC000000000000
FFFC000000000000FFFC000000000000FFFC000000000000FFFC000000000000FFFC0000
00000000FFFC000000000000FFFC000000000000FFFC000000000000FFFC000000000000
FFFC000000000000FFFC000000000000FFFC000000000000FFFC000000001FFFFFFFFF80
00001FFFFFFFFF8000001FFFFFFFFF8000001FFFFFFFFF8000001FFFFFFFFF80394F7CCE
42>I<0000000003FFF0000007000000007FFFFF00000F00000007FFFFFFE0001F000000
3FFFFFFFF8003F000000FFFFFFFFFE007F000003FFFFC003FF00FF00000FFFF800003FC1
FF00003FFFC000000FE3FF0000FFFF00000003FFFF0001FFFC00000001FFFF0003FFF800
000000FFFF0007FFE0000000007FFF001FFFC0000000003FFF003FFF80000000001FFF00
3FFF00000000000FFF007FFE000000000007FF00FFFC000000000003FF01FFFC00000000
0003FF01FFF8000000000001FF03FFF0000000000001FF07FFF0000000000000FF07FFF0
000000000000FF0FFFE00000000000007F0FFFE00000000000007F1FFFC0000000000000
7F1FFFC00000000000003F1FFFC00000000000003F3FFF800000000000003F3FFF800000
000000001F3FFF800000000000001F7FFF800000000000001F7FFF800000000000001F7F
FF80000000000000007FFF00000000000000007FFF0000000000000000FFFF0000000000
000000FFFF0000000000000000FFFF0000000000000000FFFF0000000000000000FFFF00
00000000000000FFFF0000000000000000FFFF0000000000000000FFFF00000000000000
00FFFF0000000000000000FFFF0000000000000000FFFF0000000000000000FFFF000000
0000000000FFFF0000000000000000FFFF00000000000000007FFF00000000000000007F
FF00000000000000007FFF80000000000000007FFF80000000000000007FFF8000000000
0000003FFF800000000000001F3FFF800000000000001F3FFF800000000000001F1FFFC0
0000000000001F1FFFC00000000000001F1FFFC00000000000003F0FFFE0000000000000
3F0FFFE00000000000003E07FFF00000000000003E07FFF00000000000007E03FFF80000
000000007C01FFF8000000000000FC01FFFC000000000000F800FFFC000000000001F800
7FFE000000000003F0003FFF000000000003F0003FFF800000000007E0001FFFC0000000
000FC00007FFE0000000001F800003FFF8000000003F000001FFFC00000000FE000000FF
FF00000001FC0000003FFFC0000007F80000000FFFFC00003FF000000003FFFFC001FFC0
00000000FFFFFFFFFF00000000003FFFFFFFFC000000000007FFFFFFF00000000000007F
FFFF8000000000000003FFF0000000505479D25F>67 D<FFFFFFFFFFFFFFFFFC00FFFFFF
FFFFFFFFFFFC00FFFFFFFFFFFFFFFFFC00FFFFFFFFFFFFFFFFFC00FFFFFFFFFFFFFFFFFC
000007FFF000000FFFFE000007FFF0000000FFFE000007FFF00000001FFE000007FFF000
00000FFE000007FFF000000007FE000007FFF000000003FE000007FFF000000001FE0000
07FFF000000000FE000007FFF0000000007E000007FFF0000000007F000007FFF0000000
003F000007FFF0000000003F000007FFF0000000003F000007FFF0000000001F000007FF
F0000000001F000007FFF0000000001F000007FFF0000000001F000007FFF0000000001F
000007FFF0000000001F800007FFF00003E0000F800007FFF00003E0000F800007FFF000
03E0000F800007FFF00003E0000F800007FFF00003E00000000007FFF00003E000000000
07FFF00003E00000000007FFF00007E00000000007FFF00007E00000000007FFF00007E0
0000000007FFF0000FE00000000007FFF0001FE00000000007FFF0003FE00000000007FF
F001FFE00000000007FFFFFFFFE00000000007FFFFFFFFE00000000007FFFFFFFFE00000
000007FFFFFFFFE00000000007FFFFFFFFE00000000007FFF001FFE00000000007FFF000
3FE00000000007FFF0001FE00000000007FFF0000FE00000000007FFF00007E000000000
07FFF00007E00000000007FFF00007E00000000007FFF00003E00000000007FFF00003E0
0000000007FFF00003E00000000007FFF00003E00000000007FFF00003E00000000007FF
F00003E00000000007FFF00003E00000000007FFF00000000000000007FFF00000000000
000007FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF000
00000000000007FFF00000000000000007FFF00000000000000007FFF000000000000000
07FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF0000000
0000000007FFF00000000000000007FFF00000000000000007FFF00000000000000007FF
F00000000000000007FFF00000000000000007FFF00000000000000007FFF00000000000
00FFFFFFFFFFF000000000FFFFFFFFFFF000000000FFFFFFFFFFF000000000FFFFFFFFFF
F000000000FFFFFFFFFFF00000000049527CD153>70 D<0000FFFFFFFFFF0000FFFFFFFF
FF0000FFFFFFFFFF0000FFFFFFFFFF0000FFFFFFFFFF00000000FFFE0000000000FFFE00
00000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000
000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE000000
0000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE00000000
00FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000
FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FF
FE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE
0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE00
00000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000
000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE000000
0000FFFE0000000000FFFE0000000000FFFE0000000000FFFE0000000000FFFE00000000
00FFFE0000000000FFFE0003C00000FFFE000FF00000FFFE003FFC0000FFFE007FFE0000
FFFE007FFE0000FFFE00FFFF0000FFFE00FFFF0000FFFE00FFFF0000FFFE00FFFF0000FF
FE00FFFF0001FFFC00FFFF0001FFFC00FFFF0001FFFC007FFE0003FFF8007FFC0003FFF0
003FF80007FFF0003FF00007FFE0001FE0000FFFC0000FF8003FFF800007FF00FFFE0000
01FFFFFFFC0000007FFFFFF00000001FFFFF8000000001FFF000000038537CD144>74
D<FFFFFFFFFFFFE00000000000FFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFFF0000000
00FFFFFFFFFFFFFFFE00000000FFFFFFFFFFFFFFFF800000000007FFF00000FFFFE00000
000007FFF000000FFFF00000000007FFF0000003FFFC0000000007FFF0000000FFFE0000
000007FFF00000007FFF0000000007FFF00000003FFF8000000007FFF00000001FFF8000
000007FFF00000001FFFC000000007FFF00000000FFFE000000007FFF00000000FFFE000
000007FFF00000000FFFF000000007FFF000000007FFF000000007FFF000000007FFF000
000007FFF000000007FFF800000007FFF000000007FFF800000007FFF000000007FFF800
000007FFF000000007FFF800000007FFF000000007FFF800000007FFF000000007FFF800
000007FFF000000007FFF800000007FFF000000007FFF800000007FFF000000007FFF000
000007FFF000000007FFF000000007FFF00000000FFFF000000007FFF00000000FFFE000
000007FFF00000000FFFC000000007FFF00000001FFFC000000007FFF00000001FFF8000
000007FFF00000003FFF0000000007FFF00000007FFE0000000007FFF0000000FFFC0000
000007FFF0000003FFF80000000007FFF000000FFFE00000000007FFF00000FFFF800000
000007FFFFFFFFFFFE000000000007FFFFFFFFFFF0000000000007FFFFFFFFFFC0000000
000007FFFFFFFFFFF0000000000007FFF00007FFFC000000000007FFF00000FFFF000000
000007FFF000003FFF800000000007FFF000001FFFC00000000007FFF000000FFFE00000
000007FFF0000007FFF00000000007FFF0000003FFF80000000007FFF0000003FFF80000
000007FFF0000001FFFC0000000007FFF0000001FFFC0000000007FFF0000000FFFC0000
000007FFF0000000FFFE0000000007FFF0000000FFFE0000000007FFF0000000FFFE0000
000007FFF0000000FFFE0000000007FFF0000000FFFE0000000007FFF0000000FFFE0000
000007FFF0000000FFFE0000000007FFF0000000FFFE0000000007FFF0000000FFFF0000
000007FFF0000000FFFF0000000007FFF0000000FFFF0000000007FFF0000000FFFF0000
000007FFF0000000FFFF0000000007FFF0000000FFFF0000000007FFF0000000FFFF0000
000007FFF0000000FFFF0000700007FFF0000000FFFF8000F80007FFF0000000FFFF8000
F80007FFF00000007FFF8000F80007FFF00000007FFF8001F80007FFF00000003FFFC001
F00007FFF00000003FFFC001F00007FFF00000001FFFE003F0FFFFFFFFFF80000FFFF007
E0FFFFFFFFFF800007FFFC1FC0FFFFFFFFFF800001FFFFFF80FFFFFFFFFF8000007FFFFF
00FFFFFFFFFF8000000FFFFE00000000000000000000FFF8005D537CD162>82
D<00000FFE00001C000000FFFFF0003C000007FFFFFC007C00001FFFFFFF00FC00007FFF
FFFFC1FC0000FFF001FFE1FC0001FF80001FFBFC0003FF000007FFFC0007FC000001FFFC
000FF8000000FFFC001FF00000003FFC001FF00000001FFC003FE00000000FFC003FE000
00000FFC007FE000000007FC007FC000000003FC007FC000000003FC007FC000000001FC
00FFC000000001FC00FFC000000001FC00FFC000000000FC00FFE000000000FC00FFE000
000000FC00FFF0000000007C00FFF0000000007C00FFF8000000007C00FFFC000000007C
00FFFE0000000000007FFF0000000000007FFFC000000000007FFFF800000000007FFFFF
80000000003FFFFFF8000000003FFFFFFFC00000001FFFFFFFFC0000000FFFFFFFFF8000
000FFFFFFFFFF0000007FFFFFFFFFC000003FFFFFFFFFE000001FFFFFFFFFF800000FFFF
FFFFFFC000007FFFFFFFFFE000001FFFFFFFFFF0000007FFFFFFFFF8000001FFFFFFFFF8
0000007FFFFFFFFC00000007FFFFFFFE000000007FFFFFFE0000000003FFFFFF00000000
003FFFFF000000000003FFFF800000000000FFFF8000000000003FFF8000000000001FFF
8000000000000FFFC0000000000007FFC0000000000003FFC0F80000000003FFC0F80000
000001FFC0F80000000001FFC0F80000000001FFC0F80000000000FFC0FC0000000000FF
C0FC0000000000FFC0FC0000000000FFC0FC0000000000FF80FE0000000000FF80FE0000
000000FF80FF0000000001FF80FF0000000001FF00FF8000000001FF00FFC000000003FE
00FFE000000003FE00FFF000000007FC00FFFC0000000FF800FFFE0000001FF800FFFFC0
00003FF000FF7FF80000FFE000FE1FFF8007FFC000FE07FFFFFFFF0000FC01FFFFFFFC00
00F8007FFFFFF00000F0000FFFFFC00000E000007FFC0000003A5479D249>I<3FFFFFFF
FFFFFFFFFFFC3FFFFFFFFFFFFFFFFFFC3FFFFFFFFFFFFFFFFFFC3FFFFFFFFFFFFFFFFFFC
3FFFFFFFFFFFFFFFFFFC3FFFC0007FFF0003FFFC3FFC00007FFF00003FFC7FF000007FFF
00000FFE7FE000007FFF000007FE7FC000007FFF000003FE7F8000007FFF000001FE7F00
00007FFF000000FE7F0000007FFF000000FE7E0000007FFF0000007E7E0000007FFF0000
007E7E0000007FFF0000007E7C0000007FFF0000003E7C0000007FFF0000003E7C000000
7FFF0000003E7C0000007FFF0000003E7C0000007FFF0000003EFC0000007FFF0000003F
F80000007FFF0000001FF80000007FFF0000001FF80000007FFF0000001FF80000007FFF
0000001FF80000007FFF0000001FF80000007FFF0000001F000000007FFF000000000000
00007FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF0000
0000000000007FFF00000000000000007FFF00000000000000007FFF0000000000000000
7FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF00000000
000000007FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF
00000000000000007FFF00000000000000007FFF00000000000000007FFF000000000000
00007FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF0000
0000000000007FFF00000000000000007FFF00000000000000007FFF0000000000000000
7FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF00000000
000000007FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF
00000000000000007FFF00000000000000007FFF00000000000000007FFF000000000000
00007FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF0000
0000000000007FFF00000000000000007FFF00000000000000007FFF0000000000000000
7FFF00000000000000007FFF00000000000000007FFF00000000000000007FFF00000000
0001FFFFFFFFFFFFC0000001FFFFFFFFFFFFC0000001FFFFFFFFFFFFC0000001FFFFFFFF
FFFFC0000001FFFFFFFFFFFFC00050517BD05B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecrm1200 12 19
/Fh 19 234 df<0000FF00000007FFE000001F81F800003E007C0000FC003F0001F8001F
8001F0000F8003E00007C007C00003E007C00003E00FC00003F00F800001F01F800001F8
1F800001F83F800001FC3F800001FC3F800001FC3F000000FC7F000000FE7F000000FE7F
000000FE7F000000FE7F000000FEFF000000FFFF000000FFFF000000FFFF000000FFFF00
0000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF0000
00FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000FFFF000000
FFFF000000FFFF000000FFFF000000FF7F000000FE7F000000FE7F000000FE7F000000FE
7F000000FE7F800001FE3F800001FC3F800001FC3F800001FC1F800001F81F800001F80F
C00003F00FC00003F00FC00003F007E00007E003E00007C003F0000FC001F8001F8000FC
003F00003E007C00001F81F8000007FFE0000000FF000028447CC131>48
D<000030000000F0000001F0000003F000001FF00000FFF000FFFFF000FFE7F000FF07F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F000000FF800001FFC
007FFFFFFF7FFFFFFF7FFFFFFF204278C131>I<0003FE0000001FFFC000007FFFF00001
F80FFC0003C001FE00078000FF000E00007F801C00003FC01C00001FE03800001FF03000
000FF07000000FF860000007F86C000007F8FF000007FCFF800007FCFFC00007FCFFC000
03FCFFC00003FCFFC00003FCFFC00003FC7F800007FC3F000007FC00000007FC00000007
F800000007F80000000FF80000000FF00000001FF00000001FE00000001FE00000003FC0
0000007F800000007F00000000FF00000000FE00000001FC00000003F800000007F00000
0007E00000000FC00000001F800000003F000000007C00000000F800000000F000000001
E000000003C000000007800000000F00000C001E00000C003C00000C0038000018007000
001800E000001801C0000018038000003807000000300E000000701FFFFFFFF01FFFFFFF
F03FFFFFFFF07FFFFFFFF0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE026427BC131>I<000007
FC0000003FFF000000FFFFC00003FC03E00007E000F0001FC00038003F000058007E0001
FC00FE0003FC00FC0007FC01F80007FC03F00007FC03F00007FC07E00003F80FE00001F0
0FE00000001FC00000001FC00000001FC00000003F800000003F800000003F800000007F
800000007F800000007F007F80007F01FFF0007F0780FC00FF0E003E00FF1C001F80FF38
000FC0FF700007E0FF600007E0FFE00003F0FFC00003F8FFC00001F8FFC00001FCFF8000
01FCFF800000FEFF800000FEFF800000FEFF000000FFFF000000FFFF000000FFFF000000
FF7F000000FF7F000000FF7F000000FF7F000000FF7F000000FF7F800000FF3F800000FF
3F800000FF3F800000FE1F800000FE1F800001FE1FC00001FC0FC00001FC0FC00003F807
E00003F807E00007F003F00007E001F8000FC000FC001F80007E003F00003F80FE00000F
FFF8000003FFE0000000FF800028447CC131>54 D<0000FF00000007FFE000001FFFF800
007F00FE0000FC003F0001F0001F8003E0000FC003C00007E007C00003F00F800001F00F
800001F00F000001F81F000000F81F000000F81F000000F81F000000F81F800000F81F80
0000F81FC00001F81FC00001F01FE00001F00FF00003E00FFC0003E007FE0007C007FF80
0F8003FFC01F0001FFF03E0001FFF87800007FFEF000003FFFC000001FFFC0000007FFE0
000003FFF8000007FFFC00001E7FFF00007C1FFF8000F80FFFC001E003FFE003C001FFF0
07C0007FF80F80003FFC1F00000FFC3E000007FE3E000001FE7C000000FE7C000000FF7C
0000007FF80000003FF80000003FF80000001FF80000001FF80000001FF80000001FF800
00001FFC0000001E7C0000003E7C0000003E7E0000003C3E0000007C1F000000F81F8000
01F00FC00003E007E00007C003F8001F8000FF00FF00003FFFFC00000FFFF0000001FF80
0028447CC131>56 D<0000000FFE000060000000FFFFC000E0000003FFFFF000E000000F
FC01FC01E000003FC0003E01E00000FF00000F83E00003FC000003C7E00007F8000001E7
E0000FF0000000FFE0001FE00000007FE0003FC00000003FE0007F800000001FE000FF00
0000000FE001FE000000000FE001FC0000000007E003FC0000000007E007F80000000003
E007F80000000003E00FF00000000001E00FF00000000001E01FE00000000000E01FE000
00000000E03FE00000000000E03FE00000000000E03FC00000000000607FC00000000000
607FC00000000000607FC00000000000607FC0000000000000FF80000000000000FF8000
0000000000FF80000000000000FF80000000000000FF80000000000000FF800000000000
00FF80000000000000FF80000000000000FF80000000000000FF80000000000000FF8000
0000000000FF80000000000000FF80000000000000FF800000000000007FC00000000000
007FC00000000000007FC00000000000607FC00000000000603FC00000000000603FE000
00000000603FE00000000000601FE00000000000E01FF00000000000E00FF00000000000
C00FF00000000000C007F80000000001C007F800000000018003FC00000000038001FC00
000000038001FE00000000070000FF000000000600007F800000000E00003FC00000001C
00001FE00000003800000FF000000078000007F8000000F0000003FC000001E0000000FF
000007800000003FC0001F000000000FFC00FC0000000003FFFFF00000000000FFFFC000
000000000FFE0000003B487BC546>67 D<FFFFFFFFFFFFF0FFFFFFFFFFFFF0FFFFFFFFFF
FFF001FFC000007FF0007F8000000FF8007F80000003F8007F80000001F8007F80000000
F8007F8000000078007F8000000038007F8000000038007F800000001C007F800000001C
007F800000001C007F800000000C007F800000000C007F800000000C007F800000000C00
7F800000000E007F8000000006007F80000C0006007F80000C0006007F80000C0000007F
80000C0000007F80000C0000007F80000C0000007F80000C0000007F80001C0000007F80
001C0000007F80003C0000007F80007C0000007F8001FC0000007FFFFFFC0000007FFFFF
FC0000007FFFFFFC0000007F8001FC0000007F80007C0000007F80003C0000007F80001C
0000007F80001C0000007F80000C0000007F80000C0000007F80000C0000007F80000C00
00007F80000C0000007F80000C0000007F80000C0000007F8000000000007F8000000000
007F8000000000007F8000000000007F8000000000007F8000000000007F800000000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007FC00000000001FFE0
00000000FFFFFFF8000000FFFFFFF8000000FFFFFFF800000037447CC340>70
D<01FC00000000FFFC00000000FFFC00000000FFFC0000000007FC0000000003FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC0000000001FC0000000001FC0000000001FC0000000001FC000000
0001FC0000000001FC03FC000001FC0FFF800001FC3C07E00001FC7001F80001FDE0007E
0001FD80003F0001FF80001F8001FF00001FC001FE00000FE001FC000007E001FC000007
F001FC000007F001FC000003F801FC000003F801FC000003FC01FC000003FC01FC000001
FC01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001
FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001FE01FC000001
FC01FC000003FC01FC000003FC01FC000003F801FC000003F801FC000007F001FC000007
F001FE00000FE001FE00000FC001FF00001FC001FB00003F8001F380007E0001E1C000FC
0001E0F001F80001C03C07E00001801FFF8000000003FC00002F467DC436>98
D<00007F80000003FFF000000FC07C00003F000F0000FC00038001F80001C003F8000FC0
07F0001FE007E0003FE00FE0003FE01FC0003FE01FC0003FE03F80003FE03F80001FC07F
800007007F800000007F800000007F00000000FF00000000FF00000000FF00000000FF00
000000FF00000000FF00000000FF00000000FF00000000FF00000000FF00000000FF0000
00007F000000007F800000007F800000003F800000003F800000303FC00000301FC00000
700FE00000600FE00000E007F00000C003F80001C001F800038000FC000700003F001E00
001FC078000007FFF0000000FF8000242E7DAC2B>I<000000007F000000003FFF000000
003FFF000000003FFF0000000001FF0000000000FF00000000007F00000000007F000000
00007F00000000007F00000000007F00000000007F00000000007F00000000007F000000
00007F00000000007F00000000007F00000000007F00000000007F00000000007F000000
00007F00000000007F00000000007F00000000007F00000000007F0000007F807F000003
FFF07F00000FC07C7F00003F000E7F00007E00077F0000FC0003FF0003F80001FF0007F0
0000FF0007E00000FF000FE000007F001FC000007F001FC000007F003F8000007F003F80
00007F007F8000007F007F8000007F007F0000007F00FF0000007F00FF0000007F00FF00
00007F00FF0000007F00FF0000007F00FF0000007F00FF0000007F00FF0000007F00FF00
00007F00FF0000007F00FF0000007F007F0000007F007F8000007F007F8000007F003F80
00007F003F8000007F001FC000007F001FC000007F000FC00000FF000FE00000FF0007F0
0001FF0003F00003FF0001F800077F8000FC000E7FC0003F001C7FFE000FC0F87FFE0003
FFE07FFE00007F007F002F467DC436>I<0001FE00000007FFC000001F03F000007E00FC
0000FC007E0001F8003F0003F0003F0007E0001F800FE0001FC00FC0000FC01FC0000FC0
3F80000FE03F800007E03F800007E07F800007F07F000007F07F000007F0FF000007F0FF
000007F0FF000007F0FFFFFFFFF0FFFFFFFFF0FF00000000FF00000000FF00000000FF00
000000FF00000000FF000000007F000000007F000000007F800000007F800000003F8000
00003F800000301FC00000301FC00000700FC00000600FE00000E007F00000C003F00001
C001F800038000FC000700003E001E00001F80F8000003FFE0000000FF0000242E7DAC2B
>I<01E00007F80007F8000FFC000FFC000FFC000FFC0007F80007F80001E00000000000
000000000000000000000000000000000000000000000000000000000000000000000001
FC00FFFC00FFFC00FFFC0007FC0003FC0001FC0001FC0001FC0001FC0001FC0001FC0001
FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001
FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001FC0001
FC0001FC0001FC0001FC0003FE00FFFFF8FFFFF8FFFFF815437DC21C>105
D<01FC00FF00001FE00000FFFC07FFE000FFFC0000FFFC0F03F801E07F0000FFFC3C01FC
07803F800007FC7000FE0E001FC00003FCE0007E1C000FC00001FDC0007F38000FE00001
FD80007F30000FE00001FF80003FF00007F00001FF00003FE00007F00001FF00003FE000
07F00001FE00003FC00007F00001FE00003FC00007F00001FE00003FC00007F00001FC00
003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007F0
0001FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F
800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001
FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F8000
07F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00
003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F800007F0
0001FC00003F800007F00001FC00003F800007F00001FC00003F800007F00001FC00003F
800007F00003FE00007FC0000FF800FFFFF81FFFFF03FFFFE0FFFFF81FFFFF03FFFFE0FF
FFF81FFFFF03FFFFE04B2C7DAB52>109 D<01FC01FE0000FFFC07FFC000FFFC1E07F000
FFFC3801F80007FC7001FC0003FCE000FC0001FDC000FE0001FD8000FE0001FF80007F00
01FF00007F0001FF00007F0001FE00007F0001FE00007F0001FE00007F0001FC00007F00
01FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F00
01FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F00
01FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F00
01FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F0001FC00007F00
01FC00007F0003FE0000FF80FFFFF83FFFFEFFFFF83FFFFEFFFFF83FFFFE2F2C7DAB36>
I<00007F8000000003FFF00000000FC0FC0000003E001F0000007C000F800000F80007C0
0001F00003E00003E00001F00007C00000F8000FC00000FC000FC00000FC001F8000007E
003F8000007F003F8000007F003F0000003F007F0000003F807F0000003F807F0000003F
807F0000003F80FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC0FF0000003F
C0FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC0FF0000003FC07F0000003F
807F0000003F807F8000007F803F8000007F003F8000007F001F8000007E001FC00000FE
000FC00000FC000FE00001FC0007E00001F80003F00003F00001F80007E00000FC000FC0
00003E001F0000001FC0FE00000007FFF8000000007F8000002A2E7DAC31>I<03F803F0
FFF81FFCFFF83C3EFFF8707F07F8E0FF03F9C0FF01F980FF01FB80FF01FB007E01FB003C
01FF000001FE000001FE000001FE000001FE000001FC000001FC000001FC000001FC0000
01FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0000
01FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC0000
01FC000001FC000001FC000003FF0000FFFFFE00FFFFFE00FFFFFE00202C7DAB26>114
D<0006000000060000000600000006000000060000000E0000000E0000000E0000000E00
00001E0000001E0000001E0000003E0000007E0000007E000000FE000001FE000007FE00
001FFFFFF0FFFFFFF0FFFFFFF000FE000000FE000000FE000000FE000000FE000000FE00
0000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE00
0000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000C00FE00
0C00FE000C00FE000C00FE000C00FE000C00FE000C00FE000C00FE000C00FE000C007E00
1C007F0018007F0018003F0038001F8030001FC0700007E0E00001FFC000007F001E3E7E
BC26>116 D<FFFFF001FFFCFFFFF001FFFCFFFFF001FFFC07FF00007FE003FE00001F80
01FE00001F0001FE00000E0000FE00000C0000FF00001C00007F00001800007F00001800
007F80003800003F80003000003F80003000001FC0006000001FC0006000001FE000E000
000FE000C000000FE000C0000007F00180000007F00180000007F80380000003F8030000
0003F80300000001FC0600000001FC0600000001FE0E00000000FE0C00000000FE0C0000
00007F18000000007F18000000007FB8000000003FB0000000003FB0000000001FE00000
00001FE0000000001FE0000000000FC0000000000FC00000000007800000000007800000
000007800000000003000000000003000000000006000000000006000000000006000000
00000C00000000000C0000000000180000000000180000003C00180000007E0030000000
FF0030000000FF0060000000FF0060000000FF00C0000000FE01C00000007C0380000000
7007000000003C1E000000000FFC0000000003F0000000002E3F7EAA33>121
D<000002000000000F800000001FC00000003FC00000007FC00000007FC0000000FF8000
0001FF00000003FC00000007F80000000FE00000000F800000001F000000003C00000000
38000000002000000000000000000000000000000000000000000000000001FE00000007
FFC000001F03F000007E00FC0000FC007E0001F8003F0003F0003F0007E0001F800FE000
1FC00FC0000FC01FC0000FC03F80000FE03F800007E03F800007E07F800007F07F000007
F07F000007F0FF000007F0FF000007F0FF000007F0FFFFFFFFF0FFFFFFFFF0FF00000000
FF00000000FF00000000FF00000000FF00000000FF000000007F000000007F000000007F
800000007F800000003F800000003F800000301FC00000301FC00000700FC00000600FE0
0000E007F00000C003F00001C001F800038000FC000700003E001E00001F80F8000003FF
E0000000FF000024427DC02B>233 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecrm1728 17.28 14
/Fi 14 117 df<00000007FE00000000003FFFC000000000FFFFF000000003FFFFFC0000
000FFC01FE0000003FE0003F0000007F80000F800000FF000007800001FC000003C00003
F8000005C00007F000003FE0000FE000007FE0001FE00000FFE0003FC00000FFE0003F80
0000FFE0007F000000FFE000FF000000FFE000FE000000FFE001FE0000007FC001FC0000
003F8003FC000000000003FC000000000007F8000000000007F800000000000FF8000000
00000FF000000000001FF000000000001FF000000000001FF000000000003FE000000000
003FE000000000003FE000000000003FE000000000007FE000080000007FE001FFE00000
7FE007FFFC00007FC01FFFFF00007FC07C003F80007FC0F0001FE000FFC1E00007F000FF
C3C00003F800FFC3800003FC00FFC7000001FE00FFCE000000FE00FFCE0000007F00FFDC
0000007F80FFDC0000003F80FFD80000003FC0FFF80000003FE0FFF00000001FE0FFF000
00001FF0FFF00000001FF0FFE00000001FF0FFE00000001FF8FFE00000000FF8FFE00000
000FF8FFE00000000FF8FFE00000000FFCFFC00000000FFCFFC00000000FFCFFC0000000
0FFC7FC00000000FFC7FC00000000FFC7FC00000000FFC7FC00000000FFC7FC00000000F
FC7FC00000000FFC7FE00000000FFC3FE00000000FFC3FE00000000FFC3FE00000000FFC
3FE00000000FFC1FE00000000FF81FE00000000FF81FE00000000FF81FF00000001FF80F
F00000001FF00FF00000001FF007F00000001FF007F80000003FE007F80000003FE003F8
0000003FC003FC0000007F8001FC0000007F8000FE000000FF0000FF000001FE00007F00
0001FC00003F800003FC00001FC00007F800000FE0000FF0000007F8003FC0000003FE01
FF80000000FFFFFF000000007FFFFC000000000FFFF00000000001FF00000036607ADD43
>54 D<0F003FC07FE0FFF0FFF0FFF0FFF0FFF0FFF07FE03FC00F00000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000F003FC07F
E0FFF0FFF0FFF0FFF0FFF0FFF07FE03FC00F000C3E74BD25>58 D<FFFFFFFFFFFFF00000
0000FFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFE0000000FFFFFFFFFFFFFFF800000000
FFFC0000007FFE000000003FF80000000FFF800000001FF800000001FFC00000001FF800
0000007FF00000001FF8000000001FF80000001FF8000000000FFC0000001FF800000000
03FE0000001FF80000000001FF0000001FF80000000000FF8000001FF800000000007FC0
00001FF800000000003FE000001FF800000000001FF000001FF800000000000FF000001F
F800000000000FF800001FF8000000000007FC00001FF8000000000003FC00001FF80000
00000003FE00001FF8000000000001FF00001FF8000000000001FF00001FF80000000000
00FF80001FF8000000000000FF80001FF80000000000007FC0001FF80000000000007FC0
001FF80000000000007FE0001FF80000000000003FE0001FF80000000000003FE0001FF8
0000000000003FF0001FF80000000000003FF0001FF80000000000001FF0001FF8000000
0000001FF8001FF80000000000001FF8001FF80000000000001FF8001FF8000000000000
1FFC001FF80000000000001FFC001FF80000000000000FFC001FF80000000000000FFC00
1FF80000000000000FFC001FF80000000000000FFC001FF80000000000000FFE001FF800
00000000000FFE001FF80000000000000FFE001FF80000000000000FFE001FF800000000
00000FFE001FF80000000000000FFE001FF80000000000000FFE001FF80000000000000F
FE001FF80000000000000FFE001FF80000000000000FFE001FF80000000000000FFE001F
F80000000000000FFE001FF80000000000000FFE001FF80000000000000FFE001FF80000
000000000FFE001FF80000000000000FFC001FF80000000000000FFC001FF80000000000
000FFC001FF80000000000000FFC001FF80000000000000FFC001FF80000000000001FFC
001FF80000000000001FF8001FF80000000000001FF8001FF80000000000001FF8001FF8
0000000000001FF8001FF80000000000003FF0001FF80000000000003FF0001FF8000000
0000003FE0001FF80000000000003FE0001FF80000000000007FE0001FF8000000000000
7FC0001FF8000000000000FFC0001FF8000000000000FF80001FF8000000000000FF8000
1FF8000000000001FF00001FF8000000000001FF00001FF8000000000003FE00001FF800
0000000007FC00001FF8000000000007FC00001FF800000000000FF800001FF800000000
001FF000001FF800000000003FE000001FF800000000007FC000001FF80000000000FFC0
00001FF80000000001FF8000001FF80000000003FF0000001FF80000000007FC0000001F
F8000000001FF80000001FF8000000007FF00000001FF800000001FFC00000003FF80000
0007FF80000000FFFC0000007FFE000000FFFFFFFFFFFFFFF8000000FFFFFFFFFFFFFFE0
000000FFFFFFFFFFFFFF00000000FFFFFFFFFFFFF000000000576278E167>68
D<0000000001FFE00000000000000000003FFFFF000000000000000001FFFFFFE0000000
0000000007FF003FF8000000000000001FF00003FE000000000000007FC00000FF800000
00000001FF0000003FE0000000000003FC0000000FF000000000000FF000000003FC0000
0000001FE000000001FE00000000003FC000000000FF00000000007F80000000007F8000
000000FF00000000003FC000000001FE00000000001FE000000003FC00000000000FF000
000007F8000000000007F80000000FF0000000000003FC0000001FE0000000000001FE00
00003FE0000000000001FF0000003FC0000000000000FF0000007FC0000000000000FF80
0000FF800000000000007FC00000FF800000000000007FC00001FF000000000000003FE0
0001FF000000000000003FE00003FE000000000000001FF00003FE000000000000001FF0
0007FC000000000000000FF80007FC000000000000000FF8000FFC000000000000000FFC
000FF80000000000000007FC001FF80000000000000007FE001FF80000000000000007FE
001FF80000000000000007FE003FF00000000000000003FF003FF00000000000000003FF
003FF00000000000000003FF003FF00000000000000003FF007FF00000000000000003FF
807FF00000000000000003FF807FE00000000000000001FF807FE00000000000000001FF
807FE00000000000000001FF807FE00000000000000001FF80FFE00000000000000001FF
C0FFE00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FF
C0FFE00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FF
C0FFE00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FF
C0FFE00000000000000001FFC0FFE00000000000000001FFC0FFE00000000000000001FF
C0FFE00000000000000001FFC0FFE00000000000000001FFC07FF00000000000000003FF
807FF00000000000000003FF807FF00000000000000003FF807FF00000000000000003FF
807FF00000000000000003FF803FF00000000000000003FF003FF80000000000000007FF
003FF80000000000000007FF003FF80000000000000007FF001FF80000000000000007FE
001FF80000000000000007FE001FFC000000000000000FFE000FFC000000000000000FFC
000FFC000000000000000FFC0007FE000000000000001FF80007FE000000000000001FF8
0007FE000000000000001FF80003FF000000000000003FF00003FF000000000000003FF0
0001FF800000000000007FE00000FF800000000000007FC00000FFC0000000000000FFC0
00007FC0000000000000FF8000003FE0000000000001FF0000003FF0000000000003FF00
00001FF0000000000003FE0000000FF8000000000007FC00000007FC00000000000FF800
000003FC00000000000FF000000003FE00000000001FF000000001FF00000000003FE000
000000FF80000000007FC0000000003FC000000000FF00000000001FF000000003FE0000
0000000FF800000007FC000000000007FC0000000FF8000000000001FF0000003FE00000
000000007FC00000FF800000000000001FF00003FE0000000000000007FF003FF8000000
0000000001FFFFFFE000000000000000003FFFFF00000000000000000001FFE000000000
005A6679E369>79 D<3FFFFFFFFFFFFFFFFFFFF03FFFFFFFFFFFFFFFFFFFF03FFFFFFFFF
FFFFFFFFFFF03FFFFFFFFFFFFFFFFFFFF03FFF800007FF800007FFF03FFC000003FF0000
00FFF03FE0000003FF0000001FF03FC0000003FF0000000FF07F80000003FF00000007F8
7F00000003FF00000003F87E00000003FF00000001F87C00000003FF00000000F87C0000
0003FF00000000F87C00000003FF00000000F87800000003FF00000000787800000003FF
00000000787800000003FF00000000787800000003FF00000000787000000003FF000000
00387000000003FF00000000387000000003FF00000000387000000003FF000000003870
00000003FF00000000387000000003FF0000000038F000000003FF000000003CE0000000
03FF000000001CE000000003FF000000001CE000000003FF000000001CE000000003FF00
0000001CE000000003FF000000001CE000000003FF000000001CE000000003FF00000000
1C0000000003FF00000000000000000003FF00000000000000000003FF00000000000000
000003FF00000000000000000003FF00000000000000000003FF00000000000000000003
FF00000000000000000003FF00000000000000000003FF00000000000000000003FF0000
0000000000000003FF00000000000000000003FF00000000000000000003FF0000000000
0000000003FF00000000000000000003FF00000000000000000003FF0000000000000000
0003FF00000000000000000003FF00000000000000000003FF00000000000000000003FF
00000000000000000003FF00000000000000000003FF00000000000000000003FF000000
00000000000003FF00000000000000000003FF00000000000000000003FF000000000000
00000003FF00000000000000000003FF00000000000000000003FF000000000000000000
03FF00000000000000000003FF00000000000000000003FF00000000000000000003FF00
000000000000000003FF00000000000000000003FF00000000000000000003FF00000000
000000000003FF00000000000000000003FF00000000000000000003FF00000000000000
000003FF00000000000000000003FF00000000000000000003FF00000000000000000003
FF00000000000000000003FF00000000000000000003FF00000000000000000003FF0000
0000000000000003FF00000000000000000003FF00000000000000000003FF0000000000
0000000003FF00000000000000000003FF00000000000000000003FF0000000000000000
0003FF00000000000000000003FF00000000000000000003FF00000000000000000003FF
00000000000000000003FF00000000000000000003FF00000000000000000003FF000000
00000000000007FF80000000000000000007FF8000000000000000003FFFF00000000000
0003FFFFFFFFFF000000000003FFFFFFFFFF000000000003FFFFFFFFFF000000000003FF
FFFFFFFF00000056627BE161>84 D<00003FE0000000000003FFFE00000000000FFFFF80
000000003FC03FE0000000007C000FF800000000F00003FC00000001E00001FE00000003
C00000FF000000078000007F8000000F0000003FC000000F8000003FC000000FF000001F
E000001FF800001FE000001FFC00000FF000001FFC00000FF000001FFC00000FF000001F
FC000007F800001FFC000007F800001FFC000007F800000FF8000007F8000003E0000007
F800000000000007F800000000000007F800000000000007F800000000000007F8000000
00000007F800000000000007F80000000000007FF800000000007FFFF8000000000FFFFF
F8000000007FF807F800000001FF8007F800000007FC0007F80000001FF00007F8000000
7FC00007F8000000FF800007F8000003FE000007F8000007FC000007F800000FFC000007
F800000FF8000007F800001FF0000007F800003FE0000007F800003FE0000007F800007F
C0000007F801C07FC0000007F801C07FC0000007F801C0FFC0000007F801C0FF80000007
F801C0FF80000007F801C0FF8000000FF801C0FF8000000FF801C0FF8000000FF801C0FF
8000001FF801C0FFC000001BF801C07FC000003BF801C07FC0000073F801C07FE0000073
F801803FF00000E1FC03801FF00003C1FC03800FF8000780FE070007FE000F00FF0F0001
FF807C007FFE00007FFFF8003FFC00001FFFE0001FF8000003FF000007E0003A4179BF43
>97 D<000001FF80000000000FFFF8000000003FFFFE00000000FF007F80000003FC0007
E0000007F00001F000001FE000007800003FC000003C00007F8000001E0000FF0000000F
0001FE0000001F0001FC000000FF0003FC000001FF8007F8000003FF8007F8000003FF80
0FF0000003FF800FF0000003FF801FE0000003FF801FE0000003FF803FE0000001FF003F
C00000007C003FC000000000007FC000000000007FC000000000007FC000000000007F80
0000000000FF800000000000FF800000000000FF800000000000FF800000000000FF8000
00000000FF800000000000FF800000000000FF800000000000FF800000000000FF800000
000000FF800000000000FF800000000000FF8000000000007F8000000000007FC0000000
00007FC000000000007FC000000000007FC000000000003FC000000000003FE000000000
003FE000000000001FE000000001C01FF000000001C00FF000000003C00FF80000000380
07F8000000038003FC000000078003FE000000070001FE0000000F0000FF0000001E0000
7F8000003C00003FC000007800001FE00000F000000FF80001E0000003FC0007C0000000
FF803F800000003FFFFE000000000FFFF80000000001FF80000032417BBF3C>99
D<0000000000001E000000000000003FFE00000000000007FFFE00000000000007FFFE00
000000000007FFFE00000000000007FFFE000000000000000FFE0000000000000003FE00
00000000000003FE0000000000000001FE0000000000000001FE0000000000000001FE00
00000000000001FE0000000000000001FE0000000000000001FE0000000000000001FE00
00000000000001FE0000000000000001FE0000000000000001FE0000000000000001FE00
00000000000001FE0000000000000001FE0000000000000001FE0000000000000001FE00
00000000000001FE0000000000000001FE0000000000000001FE0000000000000001FE00
00000000000001FE0000000000000001FE0000000000000001FE0000000000000001FE00
00000000000001FE0000000000000001FE0000000000000001FE0000000000000001FE00
00000000000001FE0000000000FF8001FE000000000FFFF801FE000000003FFFFE01FE00
000000FF803F81FE00000003FC0007C1FE00000007F80001E1FE0000001FE00000F9FE00
00003FC000007DFE0000007F8000003DFE000000FF0000001FFE000001FE0000000FFE00
0001FC00000007FE000003FC00000007FE000007F800000003FE000007F000000001FE00
000FF000000001FE00001FF000000001FE00001FE000000001FE00001FE000000001FE00
003FE000000001FE00003FC000000001FE00007FC000000001FE00007FC000000001FE00
007FC000000001FE00007FC000000001FE00007F8000000001FE0000FF8000000001FE00
00FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE00
00FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE00
00FF8000000001FE0000FF8000000001FE0000FF8000000001FE0000FF8000000001FE00
007F8000000001FE00007FC000000001FE00007FC000000001FE00007FC000000001FE00
003FC000000001FE00003FC000000001FE00003FE000000001FE00001FE000000001FE00
001FE000000001FE00000FF000000003FE00000FF000000003FE000007F800000007FE00
0003F800000007FE000003FC0000000FFE000001FE0000001FFE000000FE0000003DFE00
00007F0000003DFE0000003F800000F9FF0000001FC00001F1FF0000000FF00003C1FFC0
000007F8000F81FFFF800001FF007F01FFFF8000007FFFFC01FFFF8000001FFFE001FFFF
80000001FF0001FF000041657BE34B>I<000003FE00000000001FFFE000000000FFFFF8
00000001FE03FE00000007F0007F8000000FE0003FC000003FC0001FE000007F00000FF0
0000FF000007F80000FE000003F80001FC000003FC0003F8000001FC0007F8000001FE00
07F0000000FE000FF0000000FF000FF00000007F001FE00000007F001FE00000007F803F
E00000007F803FC00000003F803FC00000003F807FC00000003FC07FC00000003FC07FC0
0000003FC07F800000003FC07F800000003FC0FF800000003FC0FFFFFFFFFFFFC0FFFFFF
FFFFFFC0FFFFFFFFFFFFC0FF800000000000FF800000000000FF800000000000FF800000
000000FF800000000000FF800000000000FF800000000000FF800000000000FF80000000
00007F8000000000007FC000000000007FC000000000007FC000000000003FC000000000
003FC000000000003FE000000000001FE000000000001FE000000001C00FF000000001C0
0FF000000003C007F8000000038007F8000000038003FC000000078001FC0000000F0001
FE0000000E0000FF0000001E00007F8000003C00003FC000007800001FE00000F0000007
F00003E0000003FC0007C0000000FF803F000000003FFFFC000000000FFFF00000000001
FF80000032417BBF3C>I<0003C0007FE0000001FF80000007FFC003FFFC00000FFFF000
00FFFFC00FFFFF00003FFFFC0000FFFFC03F00FFC000FC03FF0000FFFFC078001FE001E0
007F8000FFFFC0F0000FF003C0003FC00001FFC1C00007F80700001FE000007FC3800007
FC0E00001FF000007FC7000003FC1C00000FF000003FCE000003FE3800000FF800003FCE
000001FE38000007F800003FDC000001FE70000007F800003FD8000001FE60000007F800
003FF8000000FFE0000003FC00003FF0000000FFC0000003FC00003FF0000000FFC00000
03FC00003FF0000000FFC0000003FC00003FE0000000FF80000003FC00003FE0000000FF
80000003FC00003FE0000000FF80000003FC00003FC0000000FF00000003FC00003FC000
0000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC0000
3FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003
FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00
000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC00000
00FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003F
C0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC
00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF0000
0003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000
FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0
000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00
003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF000000
03FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00003FC0000000FF
00000003FC00003FC0000000FF00000003FC00003FC0000000FF00000003FC00007FE000
0001FF80000007FE0000FFF0000003FFC000000FFF00FFFFFFF003FFFFFFC00FFFFFFFFF
FFFFF003FFFFFFC00FFFFFFFFFFFFFF003FFFFFFC00FFFFFFFFFFFFFF003FFFFFFC00FFF
FFFF683F7CBE71>109 D<0003C0007FE000000007FFC003FFFC000000FFFFC00FFFFF00
0000FFFFC03F00FFC00000FFFFC078001FE00000FFFFC0F0000FF0000001FFC1C00007F8
0000007FC3800007FC0000007FC7000003FC0000003FCE000003FE0000003FCE000001FE
0000003FDC000001FE0000003FD8000001FE0000003FF8000000FF0000003FF0000000FF
0000003FF0000000FF0000003FF0000000FF0000003FE0000000FF0000003FE0000000FF
0000003FE0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF0000003FC0000000FF
0000003FC0000000FF0000003FC0000000FF0000007FE0000001FF800000FFF0000003FF
C000FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFFFFC0FFFFFFF003FFFF
FFC0423F7CBE4B>I<000001FF80000000000FFFF0000000007FFFFE00000000FF00FF00
000003F8001FC0000007E00007E000001FC00003F800003F800001FC00007F000000FE00
00FE0000007F0000FC0000003F0001F80000001F8003F80000001FC007F00000000FE007
F00000000FE00FE000000007F00FE000000007F01FE000000007F81FC000000003F83FC0
00000003FC3FC000000003FC3FC000000003FC7FC000000003FE7F8000000001FE7F8000
000001FE7F8000000001FE7F8000000001FEFF8000000001FFFF8000000001FFFF800000
0001FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FFFF80000000
01FFFF8000000001FFFF8000000001FFFF8000000001FFFF8000000001FF7F8000000001
FE7F8000000001FE7FC000000003FE7FC000000003FE7FC000000003FE3FC000000003FC
3FC000000003FC1FC000000003F81FE000000007F81FE000000007F80FE000000007F00F
F00000000FF007F00000000FE003F80000001FC003F80000001FC001FC0000003F8000FE
0000007F00007F000000FE00003F800001FC00001FC00003F800000FE00007F0000003F8
001FC0000001FF00FF800000007FFFFE000000000FFFF00000000001FF80000038417BBF
43>I<000F0007F8000FFF001FFE00FFFF007FFF80FFFF00F81FC0FFFF01E03FC0FFFF03
C07FE003FF07807FE000FF0F007FE000FF0E007FE0007F1C007FE0007F18003FC0007F38
001F80007F30000600007F70000000007F70000000007F60000000007FE0000000007FE0
000000007FC0000000007FC0000000007FC0000000007FC0000000007FC0000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F80000000007F80000000007F80000000007F80
000000007F80000000007F80000000007F8000000000FFC000000001FFF0000000FFFFFF
F80000FFFFFFF80000FFFFFFF80000FFFFFFF800002B3F7BBE34>114
D<0000700000000000700000000000700000000000700000000000700000000000700000
000000700000000000F00000000000F00000000000F00000000000F00000000000F00000
000001F00000000001F00000000001F00000000003F00000000003F00000000007F00000
000007F0000000000FF0000000000FF0000000001FF0000000003FF0000000007FF00000
0000FFF000000003FFF00000000FFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFF
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF0000000000FF0000000000FF0000000000FF00000
00000FF0000000000FF0000000000FF00001C0000FF00001C0000FF00001C0000FF00001
C0000FF00001C0000FF00001C0000FF00001C0000FF00001C0000FF00001C0000FF00001
C0000FF00001C0000FF00001C0000FF00001C0000FF00001C00007F80003800007F80003
800007F80003800007F80007800003FC0007000003FC000F000001FE000E000000FF001E
0000007F803C0000003FE0F80000001FFFF000000007FFC000000000FF00002A597ED734
>116 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0
TeXcolorgray 1249 432 a Fi(TD)45 b(6:)h(Ordonnancemen)l(t)1635
672 y Fh(Coren)m(tin)33 b(F)-8 b(rery)1572 867 y(28)32
b(d\351cem)m(bre)i(2016)0 1225 y Fg(1)131 b(F)l(CFS)125
3726 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 3726 a 102 3819
a Ff(0)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125
3726 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 3726 a 102 3819 a Ff(2)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726
a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 3726 a 102 3819
a Ff(4)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125
3726 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 3726 a 102 3819 a Ff(6)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726
a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 3726 a 102 3819
a Ff(8)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125
3726 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 3726 a 79 3819 a Ff(10)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726
a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 3726 a 79 3819
a Ff(12)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125
3726 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 3726 a 79 3819 a Ff(14)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726
a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 3726 a 79 3819
a Ff(16)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125
3726 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 3726 a 79 3819 a Ff(18)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726
a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 3726 a 79 3819
a Ff(20)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125
3726 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 3726 a 102 3795 a Fe(\034)138 3807 y Fd(1)125
3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125
3726 a 102 3795 a Fe(\034)138 3807 y Fd(2)125 3726 y
tx@Dict begin  PutEnd  end

125 3726 a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 3726
a 102 3795 a Fe(\034)138 3807 y Fd(3)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726
a 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 3726 a 102 3795
a Fe(\034)138 3807 y Fd(4)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a 125 3726
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 3726 a 102 3795 a Fe(\034)138
3807 y Fd(5)125 3726 y
tx@Dict begin  PutEnd  end
 125 3726 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
3726 a 125 3726 a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 3726 a 125 3726 a
tx@Dict begin  PutEnd  end
 125 3726 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 170.82062 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3726 a 125 3726
a
tx@Dict begin { 119.57443 187.90268 } PutCoor PutBegin  end
 125 3726 a 125 3726 a
tx@Dict begin  PutEnd  end
 125 3726 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 136.6565 239.14886 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 204.98474 136.6565 } PutCoor PutBegin  end
 125 3726
a 125 3726 a
tx@Dict begin  PutEnd  end
 125 3726 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 85.41031 324.55917 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 3726 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 281.85402 85.41031 } PutCoor PutBegin  end
 125 3726 a 125 3726
a
tx@Dict begin  PutEnd  end
 125 3726 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 34.16412 358.7233 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
3726 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 3726 a 125 3726 a
tx@Dict begin { 341.64124 34.16412 } PutCoor PutBegin  end
 125 3726 a 125 3726 a
tx@Dict begin  PutEnd  end
 125
3726 a 0 3925 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(43)0
4025 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(0)0 4125
y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(0)p 76 4404
4 100 v 96 4404 V 0 4374 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(f)e(c)g(f)g(s)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 13 w(-)j(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 4503 V 96 4503 V 0 4473 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(f)g(c)g(f)g(s)p 0 TeXcolorgray 9 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
64 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 4603 V 96 4603 V 0 4573 a Fc(3)p
0 TeXcolorgray 508 w Fa(t)7 b(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 61 w(=)p
0 TeXcolorgray 62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(-)j(>)p 0 TeXcolorgray 10 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 11 w(;)p 76 4702 V 96 4702 V 0 4673 a
Fc(4)505 b Fa(*)p 0 TeXcolorgray 11 w(d)7 b(e)g(l)g(t)g(a)p
0 TeXcolorgray 63 w(=)p 0 TeXcolorgray 59 w(p)p 0 TeXcolorgray
10 w(-)i(>)p 0 TeXcolorgray 9 w(p)d(r)g(o)g(c)p 0 TeXcolorgray
14 w(-)j(>)p 0 TeXcolorgray 11 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 7 w(;)p 76 4802 V 96 4802 V 0 4772 a Fc(5)p
0 0.4 0 TeXcolorrgb 508 w Fa(r)f(e)g(t)g(u)g(r)g(n)p
0 TeXcolorgray 0 TeXcolorgray 63 w(p)p 0 TeXcolorgray
9 w(-)i(>)p 0 TeXcolorgray 11 w(p)e(r)g(o)g(c)p 0 TeXcolorgray
9 w(;)p 76 4902 V 96 4902 V 0 4872 a Fc(6)87 b Fa(})p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929 5400
a Fc(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(2)131 b(RR)125 2584 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(0)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(4)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(8)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(12)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(16)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(20)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(1)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584
a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y
Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(5)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 34.16412 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 25.6231 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 34.16412 239.14886 51.24619 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 51.24619 187.90268 68.32825 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 59.78722 187.90268 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 239.14886 85.41031 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 76.86928 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 85.41031 187.90268 102.49237 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 93.95134 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 102.49237 136.6565 119.57443 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 111.0334 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 119.57443 187.90268 136.6565 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 128.11546 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 136.6565 85.41031 153.73856 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 145.19753 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 153.73856 136.6565 170.82062 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 162.27959 136.6565 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 187.90268 187.90268 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 179.36165 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90268 34.16412 204.98474 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 196.44371 34.16412 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 85.41031 222.0668 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 213.52577 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 222.0668 136.6565 239.14886 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 230.60783 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 187.90268 256.23093 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 247.6899 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 256.23093 34.16412 273.31299 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 264.77196 34.16412 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 85.41031 290.39505 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 281.85402 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 290.39505 136.6565 307.47711 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 298.93608 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 307.47711 187.90268 324.55917 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 316.01814 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 85.41031 341.64124 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 333.1002 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 350.18227 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a 0 2784 a Fc(T)-7 b(otal)27
b(completion)g(time)h(=)g(54)0 2883 y(T)-7 b(otal)27
b(w)n(aiting)g(time)h(=)f(0)0 2983 y(T)-7 b(otal)27 b(resp)r(onse)f
(time)j(=)e(0)p 76 3262 4 100 v 96 3262 V 0 3232 a(1)p
0.3 0 0.1 TeXcolorrgb 89 w Fb(/)6 b(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 11
w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
59 w(r)t(r)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 12
w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray 76
3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90 w
Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(r)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray 12
w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 16 w(,)p 0 0.4 0
TeXcolorrgb 63 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0 TeXcolorgray 508 w Fa(t)7 b(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 61 w(=)p
0 TeXcolorgray 62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(-)j(>)p 0 TeXcolorgray 10 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 11 w(;)p 76 3561 V 96 3561 V 0 3531 a
Fc(4)p 0 TeXcolorgray 508 w Fa(t)g(p)g(r)g(o)g(c)p 0
TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(p)g(t)g(m)g(p)p
0 TeXcolorgray 62 w(=)p 0 TeXcolorgray 59 w(p)p 0 TeXcolorgray
10 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p 0 TeXcolorgray
9 w(;)p 76 3660 V 96 3660 V 0 3631 a Fc(5)p 0 TeXcolorgray
508 w Fa(d)g(e)g(l)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
10 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
60 w(p)p 0 TeXcolorgray 9 w(-)j(>)p 0 TeXcolorgray 11
w(p)e(r)g(o)g(c)p 0 TeXcolorgray 9 w(\))i(;)p 76 3760
V 96 3760 V 0 3730 a Fc(6)p 0 0.4 0 TeXcolorrgb 508 w
Fa(i)e(n)g(t)p 0 TeXcolorgray 0 TeXcolorgray 60 w(q)p
0 TeXcolorgray 61 w(=)62 b(1)6 b(;)p 76 3860 V 96 3860
V 0 3830 a Fc(7)p 0 0.4 0 TeXcolorrgb 507 w Fa(i)g(f)p
0 TeXcolorgray 8 w(\()p 0 TeXcolorgray 11 w(p)g(t)g(m)g(p)p
0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray 11 w(r)f(e)g(m)g(a)g(i)g(n)g
(i)g(n)g(g)p 0 TeXcolorgray 61 w(<)p 0 TeXcolorgray 59
w(q)p 0 TeXcolorgray 8 w(\))p 76 3959 V 96 3959 V 0 3929
a Fc(8)p 0 TeXcolorgray 923 w Fa(q)p 0 TeXcolorgray 61
w(=)p 0 TeXcolorgray 62 w(p)e(t)g(m)g(p)p 0 TeXcolorgray
14 w(-)j(>)p 0 TeXcolorgray 11 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 7 w(;)p 76 4059 V 96 4059 V 0 4029 a Fc(9)505
b Fa(*)p 0 TeXcolorgray 11 w(d)7 b(e)g(l)g(t)g(a)p 0
TeXcolorgray 63 w(=)p 0 TeXcolorgray 60 w(q)p 0 TeXcolorgray
9 w(;)p 76 4159 V 96 4159 V -41 4129 a Fc(10)p 0 TeXcolorgray
507 w Fa(a)g(d)g(d)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
10 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
64 w(p)h(t)g(m)g(p)p 0 TeXcolorgray 9 w(\))i(;)p 76 4258
V 96 4258 V -41 4228 a Fc(11)p 0 0.4 0 TeXcolorrgb 507
w Fa(r)e(e)g(t)g(u)g(r)g(n)p 0 TeXcolorgray 0 TeXcolorgray
67 w(p)g(t)g(m)g(p)p 0 TeXcolorgray 9 w(;)p 76 4358 V
96 4358 V -41 4328 a Fc(12)86 b Fa(})p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1929 5400 a Fc(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(3)131 b(SJF)125 2584 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(0)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(4)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584
a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(8)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(12)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(16)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584
a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(20)125 2584
y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(1)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584
a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y
Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(5)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 170.82062 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 119.57443 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 34.16412 204.98474 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 187.90268 34.16412 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 136.6565 273.31299 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 239.14886 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 316.01814 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a 0 2784 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(38)0
2883 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(0)0 2983
y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(0)p 76 3262
4 100 v 96 3262 V 0 3232 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(s)d(j)g(f)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 14 w(-)k(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(s)g(j)g(f)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 64 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 60 w(*)p
0 TeXcolorgray 64 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0 TeXcolorgray 508 w Fa(t)7 b(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 61 w(=)p
0 TeXcolorgray 62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(-)j(>)p 0 TeXcolorgray 10 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 11 w(;)p 76 3561 V 96 3561 V 0 3531 a
Fc(4)p 0 TeXcolorgray 508 w Fa(t)g(p)g(r)g(o)g(c)p 0
TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(p)g(t)g(m)g(p)p
0 TeXcolorgray 62 w(=)p 0 TeXcolorgray 59 w(p)p 0 TeXcolorgray
10 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p 0 TeXcolorgray
9 w(;)p 76 3660 V 96 3660 V 0 3631 a Fc(5)p 0 0.4 0 TeXcolorrgb
508 w Fa(w)g(h)g(i)g(l)g(e)p 0 TeXcolorgray 10 w(\()p
0 TeXcolorgray 8 w(p)p 0 TeXcolorgray 9 w(-)i(>)p 0 TeXcolorgray
10 w(n)e(e)g(x)g(t)p 0 TeXcolorgray 64 w(!)f(=)p 0 TeXcolorgray
64 w(N)h(U)g(L)g(L)p 0 TeXcolorgray 9 w(\))61 b({)p 76
3760 V 96 3760 V 0 3730 a Fc(6)p 0 TeXcolorgray 923 w
Fa(p)p 0 TeXcolorgray 61 w(=)p 0 TeXcolorgray 59 w(p)p
0 TeXcolorgray 10 w(-)9 b(>)p 0 TeXcolorgray 10 w(n)e(e)g(x)g(t)p
0 TeXcolorgray 9 w(;)p 76 3860 V 96 3860 V 0 3830 a Fc(7)p
0 0.4 0 TeXcolorrgb 925 w Fa(i)f(f)p 0 TeXcolorgray 9
w(\()p 0 TeXcolorgray 7 w(p)p 0 TeXcolorgray 9 w(-)j(>)p
0 TeXcolorgray 10 w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13
w(-)j(>)p 0 TeXcolorgray 11 w(l)e(e)g(n)g(g)g(t)g(h)p
0 TeXcolorgray 66 w(<)p 0 TeXcolorgray 60 w(p)f(t)g(m)g(p)p
0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray 11 w(l)e(e)g(n)g(g)g(t)g(h)p
0 TeXcolorgray 12 w(\))p 76 3959 V 96 3959 V 0 3929 a
Fc(8)p 0 TeXcolorgray 1345 w Fa(p)g(t)g(m)g(p)p 0 TeXcolorgray
61 w(=)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 9 w(-)i(>)p
0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p 0 TeXcolorgray 10
w(;)p 76 4059 V 96 4059 V 0 4029 a Fc(9)505 b Fa(})p
76 4159 V 96 4159 V -41 4129 a Fc(10)f Fa(*)p 0 TeXcolorgray
11 w(d)7 b(e)g(l)g(t)g(a)p 0 TeXcolorgray 63 w(=)p 0
TeXcolorgray 62 w(p)f(t)g(m)g(p)p 0 TeXcolorgray 14 w(-)j(>)p
0 TeXcolorgray 11 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 7 w(;)p 76 4258 V 96 4258 V -41 4228 a
Fc(11)p 0 0.4 0 TeXcolorrgb 507 w Fa(r)f(e)g(t)g(u)g(r)g(n)p
0 TeXcolorgray 0 TeXcolorgray 67 w(p)g(t)g(m)g(p)p 0
TeXcolorgray 9 w(;)p 76 4358 V 96 4358 V -41 4328 a Fc(12)86
b Fa(})p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1929 5400 a Fc(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(4)131 b(SR)-11 b(TF)125 2584 y
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 17.08206 T 15 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 17.08206
0.0 17.08206   /Lineto /lineto load def 0  setlinejoin false Line 
gsave 0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore grestore grestore 0.0 17.08206 T } repeat
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  17.08206 0.0 T 21 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 290.39505 0.0
17.08206   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 17.08206 0.0 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 17.08206 375.80544 290.39505 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 17.08206 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677
a Ff(0)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 51.24619 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(2)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 85.41031 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677
a Ff(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 119.57443 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677 a Ff(6)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 153.73856 17.08206 } PutCoor PutBegin  end
 125 2584 a 102 2677
a Ff(8)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 187.90268 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(10)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 222.0668 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677
a Ff(12)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 256.23093 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(14)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 290.39505 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677
a Ff(16)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { 324.55917 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677 a Ff(18)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 358.7233 17.08206 } PutCoor PutBegin  end
 125 2584 a 79 2677
a Ff(20)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125
2584 a
tx@Dict begin { -17.08206 273.31299 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138 2665 y Fd(1)125
2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 222.0668 } PutCoor PutBegin  end
 125
2584 a 102 2653 a Fe(\034)138 2665 y Fd(2)125 2584 y
tx@Dict begin  PutEnd  end

125 2584 a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 170.82062 } PutCoor PutBegin  end
 125 2584
a 102 2653 a Fe(\034)138 2665 y Fd(3)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584
a 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 119.57443 } PutCoor PutBegin  end
 125 2584 a 102 2653
a Fe(\034)138 2665 y Fd(4)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { -17.08206 68.32825 } PutCoor PutBegin  end
 125 2584 a 102 2653 a Fe(\034)138
2665 y Fd(5)125 2584 y
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 34.16412 17.08206 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 85.41031 17.08206 85.41031   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 136.6565 17.08206 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 187.90268 17.08206 187.90268   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 358.72337 239.14886 17.08206 239.14886   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 17.08206 273.31299 17.08206 239.14886   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 51.24619 222.0668 51.24619 187.90268   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 85.41031 170.82062 85.41031 136.6565   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 119.57443 119.57443 119.57443 85.41031   /Lineto /lineto
load def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 153.73856 68.32825 153.73856 34.16412   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.08206 239.14886 34.16412 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 25.6231 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 34.16412 239.14886 51.24619 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 42.70515 239.14886 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 51.24619 239.14886 68.32825 256.23093
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 59.78722 239.14886 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 68.32825 187.90268 85.41031 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 76.86928 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 85.41031 136.6565 102.49237 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 93.95134 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 102.49237 136.6565 119.57443 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 111.0334 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 119.57443 136.6565 136.6565 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 128.11546 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 136.6565 136.6565 153.73856 153.73856
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 145.19753 136.6565 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 153.73856 34.16412 170.82062 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 162.27959 34.16412 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.82062 34.16412 187.90268 51.24619
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 179.36165 34.16412 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90268 187.90268 204.98474 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 196.44371 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 204.98474 187.90268 222.0668 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 213.52577 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 222.0668 187.90268 239.14886 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 230.60783 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 239.14886 187.90268 256.23093 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 247.6899 187.90268 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 256.23093 187.90268 273.31299 204.98474
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 264.77196 187.90268 } PutCoor PutBegin  end
 125 2584
a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 273.31299 85.41031 290.39505 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 281.85402 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584
a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 290.39505 85.41031 307.47711 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 298.93608 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125
2584 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 307.47711 85.41031 324.55917 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584 a
tx@Dict begin { 316.01814 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 324.55917 85.41031 341.64124 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2584 a 125 2584 a
tx@Dict begin { 333.1002 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 341.64124 85.41031 358.7233 102.49237
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2584 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2584 a 125 2584
a
tx@Dict begin { 350.18227 85.41031 } PutCoor PutBegin  end
 125 2584 a 125 2584 a
tx@Dict begin  PutEnd  end
 125 2584 a 0 2784 a Fc(T)k(otal)27
b(completion)g(time)h(=)g(36)0 2883 y(T)-7 b(otal)27
b(w)n(aiting)g(time)h(=)f(0)0 2983 y(T)-7 b(otal)27 b(resp)r(onse)f
(time)j(=)e(0)p 76 3262 4 100 v 96 3262 V 0 3232 a(1)p
0.3 0 0.1 TeXcolorrgb 89 w Fb(/)6 b(*)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
63 w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 11
w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
61 w(s)e(r)g(t)g(f)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
13 w(-)j(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray 76
3362 V 96 3362 V 0 3332 a Fc(2)p 0 TeXcolorgray 90 w
Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(s)g(r)g(t)g(f)p 0 TeXcolorgray 9 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 15 w(,)p 0 TeXcolorgray
64 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 3461 V 96 3461 V 0 3431 a Fc(3)p
0 TeXcolorgray 508 w Fa(t)7 b(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 61 w(=)p
0 TeXcolorgray 62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray
16 w(-)j(>)p 0 TeXcolorgray 10 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 11 w(;)p 76 3561 V 96 3561 V 0 3531 a
Fc(4)p 0 TeXcolorgray 508 w Fa(t)g(p)g(r)g(o)g(c)p 0
TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(p)g(t)g(m)g(p)p
0 TeXcolorgray 62 w(=)p 0 TeXcolorgray 59 w(p)p 0 TeXcolorgray
10 w(-)i(>)p 0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p 0 TeXcolorgray
9 w(;)p 76 3660 V 96 3660 V 0 3631 a Fc(5)p 0 0.4 0 TeXcolorrgb
508 w Fa(i)g(n)g(t)p 0 TeXcolorgray 0 TeXcolorgray 60
w(q)p 0 TeXcolorgray 61 w(=)62 b(1)6 b(;)p 76 3760 V
96 3760 V 0 3730 a Fc(6)p 0 0.4 0 TeXcolorrgb 508 w Fa(w)h(h)g(i)g(l)g
(e)p 0 TeXcolorgray 10 w(\()p 0 TeXcolorgray 8 w(p)p
0 TeXcolorgray 9 w(-)i(>)p 0 TeXcolorgray 10 w(n)e(e)g(x)g(t)p
0 TeXcolorgray 64 w(!)f(=)p 0 TeXcolorgray 64 w(N)h(U)g(L)g(L)p
0 TeXcolorgray 9 w(\))61 b({)p 76 3860 V 96 3860 V 0
3830 a Fc(7)p 0 TeXcolorgray 923 w Fa(p)p 0 TeXcolorgray
61 w(=)p 0 TeXcolorgray 59 w(p)p 0 TeXcolorgray 10 w(-)9
b(>)p 0 TeXcolorgray 10 w(n)e(e)g(x)g(t)p 0 TeXcolorgray
9 w(;)p 76 3959 V 96 3959 V 0 3929 a Fc(8)p 0 0.4 0 TeXcolorrgb
925 w Fa(i)f(f)p 0 TeXcolorgray 9 w(\()p 0 TeXcolorgray
7 w(p)p 0 TeXcolorgray 9 w(-)j(>)p 0 TeXcolorgray 10
w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray
12 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p 0 TeXcolorgray
60 w(<)p 0 TeXcolorgray 61 w(p)e(t)g(m)g(p)p 0 TeXcolorgray
13 w(-)j(>)p 0 TeXcolorgray 12 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p
0 TeXcolorgray 7 w(\))p 76 4059 V 96 4059 V 0 4029 a
Fc(9)p 0 TeXcolorgray 1345 w Fa(p)f(t)g(m)g(p)p 0 TeXcolorgray
61 w(=)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 9 w(-)i(>)p
0 TeXcolorgray 10 w(p)e(r)g(o)g(c)p 0 TeXcolorgray 10
w(;)p 76 4159 V 96 4159 V -41 4129 a Fc(10)504 b Fa(})p
76 4258 V 96 4258 V -41 4228 a Fc(11)p 0 0.4 0 TeXcolorrgb
506 w Fa(i)6 b(f)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
11 w(p)g(t)g(m)g(p)p 0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray
11 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p 0 TeXcolorgray
61 w(<)p 0 TeXcolorgray 59 w(q)p 0 TeXcolorgray 8 w(\))p
76 4358 V 96 4358 V -41 4328 a Fc(12)p 0 TeXcolorgray
922 w Fa(q)p 0 TeXcolorgray 61 w(=)p 0 TeXcolorgray 62
w(p)e(t)g(m)g(p)p 0 TeXcolorgray 14 w(-)j(>)p 0 TeXcolorgray
11 w(r)f(e)g(m)g(a)g(i)g(n)g(i)g(n)g(g)p 0 TeXcolorgray
7 w(;)p 76 4457 V 96 4457 V -41 4428 a Fc(13)504 b Fa(*)p
0 TeXcolorgray 11 w(d)7 b(e)g(l)g(t)g(a)p 0 TeXcolorgray
63 w(=)p 0 TeXcolorgray 60 w(q)p 0 TeXcolorgray 9 w(;)p
76 4557 V 96 4557 V -41 4527 a Fc(14)p 0 0.4 0 TeXcolorrgb
507 w Fa(r)g(e)g(t)g(u)g(r)g(n)p 0 TeXcolorgray 0 TeXcolorgray
67 w(p)g(t)g(m)g(p)p 0 TeXcolorgray 9 w(;)p 76 4657 V
96 4657 V -41 4627 a Fc(15)86 b Fa(})p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1929 5400 a Fc(4)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
